# Makefile.in generated by automake 1.13.4 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2013 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# Copyright (c) 2013 Luca Barbato
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom
# the Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
# IN THE SOFTWARE.




VPATH = @srcdir@
am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
noinst_PROGRAMS = perf/inproc_lat$(EXEEXT) perf/inproc_thr$(EXEEXT) \
	perf/local_lat$(EXEEXT) perf/remote_lat$(EXEEXT) \
	perf/local_thr$(EXEEXT) perf/remote_thr$(EXEEXT)
check_PROGRAMS = $(am__EXEEXT_2) $(am__EXEEXT_3) $(am__EXEEXT_4)
bin_PROGRAMS = $(am__EXEEXT_1)
@NANOCAT_TRUE@am__append_1 = nanocat
subdir = .
DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/Makefile.am \
	$(top_srcdir)/configure $(am__configure_deps) \
	$(srcdir)/libnanomsg.pc.in depcomp $(dist_man1_MANS) \
	$(dist_man3_MANS) $(dist_man7_MANS) $(nninclude_HEADERS) \
	test-driver AUTHORS COPYING README compile config.guess \
	config.sub install-sh missing ltmain.sh
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ax_pthread.m4 \
	$(top_srcdir)/m4/dolt.m4 $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
 configure.lineno config.status.lineno
mkinstalldirs = $(install_sh) -d
CONFIG_CLEAN_FILES = libnanomsg.pc
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" \
	"$(DESTDIR)$(man1dir)" "$(DESTDIR)$(man3dir)" \
	"$(DESTDIR)$(man7dir)" "$(DESTDIR)$(docdir)" \
	"$(DESTDIR)$(pkgconfigdir)" "$(DESTDIR)$(nnincludedir)"
LTLIBRARIES = $(lib_LTLIBRARIES)
libnanomsg_la_LIBADD =
am__dirstamp = $(am__leading_dot)dirstamp
am__objects_1 = src/core/libnanomsg_la-ep.lo \
	src/core/libnanomsg_la-epbase.lo \
	src/core/libnanomsg_la-global.lo \
	src/core/libnanomsg_la-pipe.lo src/core/libnanomsg_la-poll.lo \
	src/core/libnanomsg_la-sock.lo \
	src/core/libnanomsg_la-sockbase.lo \
	src/core/libnanomsg_la-symbol.lo
am__objects_2 = src/aio/libnanomsg_la-ctx.lo \
	src/aio/libnanomsg_la-fsm.lo src/aio/libnanomsg_la-poller.lo \
	src/aio/libnanomsg_la-pool.lo src/aio/libnanomsg_la-timer.lo \
	src/aio/libnanomsg_la-timerset.lo \
	src/aio/libnanomsg_la-usock.lo src/aio/libnanomsg_la-worker.lo
am__objects_3 = src/utils/libnanomsg_la-alloc.lo \
	src/utils/libnanomsg_la-atomic.lo \
	src/utils/libnanomsg_la-chunk.lo \
	src/utils/libnanomsg_la-chunkref.lo \
	src/utils/libnanomsg_la-clock.lo \
	src/utils/libnanomsg_la-closefd.lo \
	src/utils/libnanomsg_la-efd.lo src/utils/libnanomsg_la-err.lo \
	src/utils/libnanomsg_la-glock.lo \
	src/utils/libnanomsg_la-hash.lo \
	src/utils/libnanomsg_la-list.lo src/utils/libnanomsg_la-msg.lo \
	src/utils/libnanomsg_la-mutex.lo \
	src/utils/libnanomsg_la-queue.lo \
	src/utils/libnanomsg_la-random.lo \
	src/utils/libnanomsg_la-sem.lo \
	src/utils/libnanomsg_la-sleep.lo \
	src/utils/libnanomsg_la-stopwatch.lo \
	src/utils/libnanomsg_la-thread.lo \
	src/utils/libnanomsg_la-wire.lo
am__objects_4 = src/protocols/bus/libnanomsg_la-bus.lo \
	src/protocols/bus/libnanomsg_la-xbus.lo
am__objects_5 = src/protocols/pipeline/libnanomsg_la-push.lo \
	src/protocols/pipeline/libnanomsg_la-pull.lo \
	src/protocols/pipeline/libnanomsg_la-xpull.lo \
	src/protocols/pipeline/libnanomsg_la-xpush.lo
am__objects_6 = src/protocols/pair/libnanomsg_la-pair.lo \
	src/protocols/pair/libnanomsg_la-xpair.lo
am__objects_7 = src/protocols/pubsub/libnanomsg_la-pub.lo \
	src/protocols/pubsub/libnanomsg_la-sub.lo \
	src/protocols/pubsub/libnanomsg_la-trie.lo \
	src/protocols/pubsub/libnanomsg_la-xpub.lo \
	src/protocols/pubsub/libnanomsg_la-xsub.lo
am__objects_8 = src/protocols/reqrep/libnanomsg_la-req.lo \
	src/protocols/reqrep/libnanomsg_la-rep.lo \
	src/protocols/reqrep/libnanomsg_la-task.lo \
	src/protocols/reqrep/libnanomsg_la-xrep.lo \
	src/protocols/reqrep/libnanomsg_la-xreq.lo
am__objects_9 = src/protocols/survey/libnanomsg_la-respondent.lo \
	src/protocols/survey/libnanomsg_la-surveyor.lo \
	src/protocols/survey/libnanomsg_la-xrespondent.lo \
	src/protocols/survey/libnanomsg_la-xsurveyor.lo
am__objects_10 = src/protocols/utils/libnanomsg_la-dist.lo \
	src/protocols/utils/libnanomsg_la-excl.lo \
	src/protocols/utils/libnanomsg_la-fq.lo \
	src/protocols/utils/libnanomsg_la-lb.lo \
	src/protocols/utils/libnanomsg_la-priolist.lo
am__objects_11 = $(am__objects_4) $(am__objects_5) $(am__objects_6) \
	$(am__objects_7) $(am__objects_8) $(am__objects_9) \
	$(am__objects_10)
am__objects_12 = src/transports/utils/libnanomsg_la-backoff.lo \
	src/transports/utils/libnanomsg_la-dns.lo \
	src/transports/utils/libnanomsg_la-iface.lo \
	src/transports/utils/libnanomsg_la-literal.lo \
	src/transports/utils/libnanomsg_la-port.lo \
	src/transports/utils/libnanomsg_la-streamhdr.lo
am__objects_13 = src/transports/inproc/libnanomsg_la-binproc.lo \
	src/transports/inproc/libnanomsg_la-cinproc.lo \
	src/transports/inproc/libnanomsg_la-inproc.lo \
	src/transports/inproc/libnanomsg_la-ins.lo \
	src/transports/inproc/libnanomsg_la-msgqueue.lo \
	src/transports/inproc/libnanomsg_la-sinproc.lo
am__objects_14 = src/transports/ipc/libnanomsg_la-aipc.lo \
	src/transports/ipc/libnanomsg_la-bipc.lo \
	src/transports/ipc/libnanomsg_la-cipc.lo \
	src/transports/ipc/libnanomsg_la-ipc.lo \
	src/transports/ipc/libnanomsg_la-sipc.lo
am__objects_15 = src/transports/tcp/libnanomsg_la-atcp.lo \
	src/transports/tcp/libnanomsg_la-btcp.lo \
	src/transports/tcp/libnanomsg_la-ctcp.lo \
	src/transports/tcp/libnanomsg_la-stcp.lo \
	src/transports/tcp/libnanomsg_la-tcp.lo
am__objects_16 = $(am__objects_12) $(am__objects_13) $(am__objects_14) \
	$(am__objects_15)
am__objects_17 = src/devices/libnanomsg_la-device.lo
am_libnanomsg_la_OBJECTS = $(am__objects_1) $(am__objects_2) \
	$(am__objects_3) $(am__objects_11) $(am__objects_16) \
	$(am__objects_17)
libnanomsg_la_OBJECTS = $(am_libnanomsg_la_OBJECTS)
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am__v_lt_1 = 
libnanomsg_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(libnanomsg_la_CFLAGS) \
	$(CFLAGS) $(libnanomsg_la_LDFLAGS) $(LDFLAGS) -o $@
@NANOCAT_TRUE@am__EXEEXT_1 = nanocat$(EXEEXT)
am__EXEEXT_2 = tests/inproc$(EXEEXT) tests/inproc_shutdown$(EXEEXT) \
	tests/ipc$(EXEEXT) tests/ipc_shutdown$(EXEEXT) \
	tests/ipc_stress$(EXEEXT) tests/tcp$(EXEEXT) \
	tests/tcp_shutdown$(EXEEXT)
am__EXEEXT_3 = tests/pair$(EXEEXT) tests/pubsub$(EXEEXT) \
	tests/reqrep$(EXEEXT) tests/pipeline$(EXEEXT) \
	tests/survey$(EXEEXT) tests/bus$(EXEEXT)
am__EXEEXT_4 = tests/block$(EXEEXT) tests/term$(EXEEXT) \
	tests/timeo$(EXEEXT) tests/iovec$(EXEEXT) tests/msg$(EXEEXT) \
	tests/prio$(EXEEXT) tests/poll$(EXEEXT) tests/device$(EXEEXT) \
	tests/emfile$(EXEEXT) tests/domain$(EXEEXT) \
	tests/trie$(EXEEXT) tests/list$(EXEEXT) tests/hash$(EXEEXT) \
	tests/symbol$(EXEEXT) tests/separation$(EXEEXT) \
	tests/zerocopy$(EXEEXT) tests/shutdown$(EXEEXT) \
	tests/cmsg$(EXEEXT)
PROGRAMS = $(bin_PROGRAMS) $(noinst_PROGRAMS)
am_nanocat_OBJECTS = tools/nanocat.$(OBJEXT) tools/options.$(OBJEXT)
nanocat_OBJECTS = $(am_nanocat_OBJECTS)
nanocat_LDADD = $(LDADD)
nanocat_DEPENDENCIES = libnanomsg.la
perf_inproc_lat_SOURCES = perf/inproc_lat.c
perf_inproc_lat_OBJECTS = perf/inproc_lat.$(OBJEXT)
perf_inproc_lat_LDADD = $(LDADD)
perf_inproc_lat_DEPENDENCIES = libnanomsg.la
perf_inproc_thr_SOURCES = perf/inproc_thr.c
perf_inproc_thr_OBJECTS = perf/inproc_thr.$(OBJEXT)
perf_inproc_thr_LDADD = $(LDADD)
perf_inproc_thr_DEPENDENCIES = libnanomsg.la
perf_local_lat_SOURCES = perf/local_lat.c
perf_local_lat_OBJECTS = perf/local_lat.$(OBJEXT)
perf_local_lat_LDADD = $(LDADD)
perf_local_lat_DEPENDENCIES = libnanomsg.la
perf_local_thr_SOURCES = perf/local_thr.c
perf_local_thr_OBJECTS = perf/local_thr.$(OBJEXT)
perf_local_thr_LDADD = $(LDADD)
perf_local_thr_DEPENDENCIES = libnanomsg.la
perf_remote_lat_SOURCES = perf/remote_lat.c
perf_remote_lat_OBJECTS = perf/remote_lat.$(OBJEXT)
perf_remote_lat_LDADD = $(LDADD)
perf_remote_lat_DEPENDENCIES = libnanomsg.la
perf_remote_thr_SOURCES = perf/remote_thr.c
perf_remote_thr_OBJECTS = perf/remote_thr.$(OBJEXT)
perf_remote_thr_LDADD = $(LDADD)
perf_remote_thr_DEPENDENCIES = libnanomsg.la
tests_block_SOURCES = tests/block.c
tests_block_OBJECTS = tests/block.$(OBJEXT)
tests_block_LDADD = $(LDADD)
tests_block_DEPENDENCIES = libnanomsg.la
tests_bus_SOURCES = tests/bus.c
tests_bus_OBJECTS = tests/bus.$(OBJEXT)
tests_bus_LDADD = $(LDADD)
tests_bus_DEPENDENCIES = libnanomsg.la
tests_cmsg_SOURCES = tests/cmsg.c
tests_cmsg_OBJECTS = tests/cmsg.$(OBJEXT)
tests_cmsg_LDADD = $(LDADD)
tests_cmsg_DEPENDENCIES = libnanomsg.la
tests_device_SOURCES = tests/device.c
tests_device_OBJECTS = tests/device.$(OBJEXT)
tests_device_LDADD = $(LDADD)
tests_device_DEPENDENCIES = libnanomsg.la
tests_domain_SOURCES = tests/domain.c
tests_domain_OBJECTS = tests/domain.$(OBJEXT)
tests_domain_LDADD = $(LDADD)
tests_domain_DEPENDENCIES = libnanomsg.la
tests_emfile_SOURCES = tests/emfile.c
tests_emfile_OBJECTS = tests/emfile.$(OBJEXT)
tests_emfile_LDADD = $(LDADD)
tests_emfile_DEPENDENCIES = libnanomsg.la
tests_hash_SOURCES = tests/hash.c
tests_hash_OBJECTS = tests/hash.$(OBJEXT)
tests_hash_LDADD = $(LDADD)
tests_hash_DEPENDENCIES = libnanomsg.la
tests_inproc_SOURCES = tests/inproc.c
tests_inproc_OBJECTS = tests/inproc.$(OBJEXT)
tests_inproc_LDADD = $(LDADD)
tests_inproc_DEPENDENCIES = libnanomsg.la
tests_inproc_shutdown_SOURCES = tests/inproc_shutdown.c
tests_inproc_shutdown_OBJECTS = tests/inproc_shutdown.$(OBJEXT)
tests_inproc_shutdown_LDADD = $(LDADD)
tests_inproc_shutdown_DEPENDENCIES = libnanomsg.la
tests_iovec_SOURCES = tests/iovec.c
tests_iovec_OBJECTS = tests/iovec.$(OBJEXT)
tests_iovec_LDADD = $(LDADD)
tests_iovec_DEPENDENCIES = libnanomsg.la
tests_ipc_SOURCES = tests/ipc.c
tests_ipc_OBJECTS = tests/ipc.$(OBJEXT)
tests_ipc_LDADD = $(LDADD)
tests_ipc_DEPENDENCIES = libnanomsg.la
tests_ipc_shutdown_SOURCES = tests/ipc_shutdown.c
tests_ipc_shutdown_OBJECTS = tests/ipc_shutdown.$(OBJEXT)
tests_ipc_shutdown_LDADD = $(LDADD)
tests_ipc_shutdown_DEPENDENCIES = libnanomsg.la
tests_ipc_stress_SOURCES = tests/ipc_stress.c
tests_ipc_stress_OBJECTS = tests/ipc_stress.$(OBJEXT)
tests_ipc_stress_LDADD = $(LDADD)
tests_ipc_stress_DEPENDENCIES = libnanomsg.la
tests_list_SOURCES = tests/list.c
tests_list_OBJECTS = tests/list.$(OBJEXT)
tests_list_LDADD = $(LDADD)
tests_list_DEPENDENCIES = libnanomsg.la
tests_msg_SOURCES = tests/msg.c
tests_msg_OBJECTS = tests/msg.$(OBJEXT)
tests_msg_LDADD = $(LDADD)
tests_msg_DEPENDENCIES = libnanomsg.la
tests_pair_SOURCES = tests/pair.c
tests_pair_OBJECTS = tests/pair.$(OBJEXT)
tests_pair_LDADD = $(LDADD)
tests_pair_DEPENDENCIES = libnanomsg.la
tests_pipeline_SOURCES = tests/pipeline.c
tests_pipeline_OBJECTS = tests/pipeline.$(OBJEXT)
tests_pipeline_LDADD = $(LDADD)
tests_pipeline_DEPENDENCIES = libnanomsg.la
tests_poll_SOURCES = tests/poll.c
tests_poll_OBJECTS = tests/poll.$(OBJEXT)
tests_poll_LDADD = $(LDADD)
tests_poll_DEPENDENCIES = libnanomsg.la
tests_prio_SOURCES = tests/prio.c
tests_prio_OBJECTS = tests/prio.$(OBJEXT)
tests_prio_LDADD = $(LDADD)
tests_prio_DEPENDENCIES = libnanomsg.la
tests_pubsub_SOURCES = tests/pubsub.c
tests_pubsub_OBJECTS = tests/pubsub.$(OBJEXT)
tests_pubsub_LDADD = $(LDADD)
tests_pubsub_DEPENDENCIES = libnanomsg.la
tests_reqrep_SOURCES = tests/reqrep.c
tests_reqrep_OBJECTS = tests/reqrep.$(OBJEXT)
tests_reqrep_LDADD = $(LDADD)
tests_reqrep_DEPENDENCIES = libnanomsg.la
tests_separation_SOURCES = tests/separation.c
tests_separation_OBJECTS = tests/separation.$(OBJEXT)
tests_separation_LDADD = $(LDADD)
tests_separation_DEPENDENCIES = libnanomsg.la
tests_shutdown_SOURCES = tests/shutdown.c
tests_shutdown_OBJECTS = tests/shutdown.$(OBJEXT)
tests_shutdown_LDADD = $(LDADD)
tests_shutdown_DEPENDENCIES = libnanomsg.la
tests_survey_SOURCES = tests/survey.c
tests_survey_OBJECTS = tests/survey.$(OBJEXT)
tests_survey_LDADD = $(LDADD)
tests_survey_DEPENDENCIES = libnanomsg.la
tests_symbol_SOURCES = tests/symbol.c
tests_symbol_OBJECTS = tests/symbol.$(OBJEXT)
tests_symbol_LDADD = $(LDADD)
tests_symbol_DEPENDENCIES = libnanomsg.la
tests_tcp_SOURCES = tests/tcp.c
tests_tcp_OBJECTS = tests/tcp.$(OBJEXT)
tests_tcp_LDADD = $(LDADD)
tests_tcp_DEPENDENCIES = libnanomsg.la
tests_tcp_shutdown_SOURCES = tests/tcp_shutdown.c
tests_tcp_shutdown_OBJECTS = tests/tcp_shutdown.$(OBJEXT)
tests_tcp_shutdown_LDADD = $(LDADD)
tests_tcp_shutdown_DEPENDENCIES = libnanomsg.la
tests_term_SOURCES = tests/term.c
tests_term_OBJECTS = tests/term.$(OBJEXT)
tests_term_LDADD = $(LDADD)
tests_term_DEPENDENCIES = libnanomsg.la
tests_timeo_SOURCES = tests/timeo.c
tests_timeo_OBJECTS = tests/timeo.$(OBJEXT)
tests_timeo_LDADD = $(LDADD)
tests_timeo_DEPENDENCIES = libnanomsg.la
tests_trie_SOURCES = tests/trie.c
tests_trie_OBJECTS = tests/trie.$(OBJEXT)
tests_trie_LDADD = $(LDADD)
tests_trie_DEPENDENCIES = libnanomsg.la
tests_zerocopy_SOURCES = tests/zerocopy.c
tests_zerocopy_OBJECTS = tests/zerocopy.$(OBJEXT)
tests_zerocopy_LDADD = $(LDADD)
tests_zerocopy_DEPENDENCIES = libnanomsg.la
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_@AM_V@)
am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_@AM_V@)
am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(libnanomsg_la_SOURCES) $(nanocat_SOURCES) \
	perf/inproc_lat.c perf/inproc_thr.c perf/local_lat.c \
	perf/local_thr.c perf/remote_lat.c perf/remote_thr.c \
	tests/block.c tests/bus.c tests/cmsg.c tests/device.c \
	tests/domain.c tests/emfile.c tests/hash.c tests/inproc.c \
	tests/inproc_shutdown.c tests/iovec.c tests/ipc.c \
	tests/ipc_shutdown.c tests/ipc_stress.c tests/list.c \
	tests/msg.c tests/pair.c tests/pipeline.c tests/poll.c \
	tests/prio.c tests/pubsub.c tests/reqrep.c tests/separation.c \
	tests/shutdown.c tests/survey.c tests/symbol.c tests/tcp.c \
	tests/tcp_shutdown.c tests/term.c tests/timeo.c tests/trie.c \
	tests/zerocopy.c
DIST_SOURCES = $(libnanomsg_la_SOURCES) $(nanocat_SOURCES) \
	perf/inproc_lat.c perf/inproc_thr.c perf/local_lat.c \
	perf/local_thr.c perf/remote_lat.c perf/remote_thr.c \
	tests/block.c tests/bus.c tests/cmsg.c tests/device.c \
	tests/domain.c tests/emfile.c tests/hash.c tests/inproc.c \
	tests/inproc_shutdown.c tests/iovec.c tests/ipc.c \
	tests/ipc_shutdown.c tests/ipc_stress.c tests/list.c \
	tests/msg.c tests/pair.c tests/pipeline.c tests/poll.c \
	tests/prio.c tests/pubsub.c tests/reqrep.c tests/separation.c \
	tests/shutdown.c tests/survey.c tests/symbol.c tests/tcp.c \
	tests/tcp_shutdown.c tests/term.c tests/timeo.c tests/trie.c \
	tests/zerocopy.c
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
man1dir = $(mandir)/man1
man3dir = $(mandir)/man3
man7dir = $(mandir)/man7
NROFF = nroff
MANS = $(dist_man1_MANS) $(dist_man3_MANS) $(dist_man7_MANS)
DATA = $(doc_DATA) $(pkgconfig_DATA)
HEADERS = $(nninclude_HEADERS)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
CSCOPE = cscope
AM_RECURSIVE_TARGETS = cscope check recheck
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = { \
  $(am__tty_colors_dummy); \
  if test "X$(AM_COLOR_TESTS)" = Xno; then \
    am__color_tests=no; \
  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \
    am__color_tests=yes; \
  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \
    am__color_tests=yes; \
  fi; \
  if test $$am__color_tests = yes; then \
    red='[0;31m'; \
    grn='[0;32m'; \
    lgn='[1;32m'; \
    blu='[1;34m'; \
    mgn='[0;35m'; \
    brg='[1m'; \
    std='[m'; \
  fi; \
}
am__recheck_rx = ^[ 	]*:recheck:[ 	]*
am__global_test_result_rx = ^[ 	]*:global-test-result:[ 	]*
am__copy_in_global_log_rx = ^[ 	]*:copy-in-global-log:[ 	]*
# A command that, given a newline-separated list of test names on the
# standard input, print the name of the tests that are to be re-run
# upon "make recheck".
am__list_recheck_tests = $(AWK) '{ \
  recheck = 1; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
        { \
          if ((getline line2 < ($$0 ".log")) < 0) \
	    recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \
        { \
          recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \
        { \
          break; \
        } \
    }; \
  if (recheck) \
    print $$0; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# A command that, given a newline-separated list of test names on the
# standard input, create the global log from their .trs and .log files.
am__create_global_log = $(AWK) ' \
function fatal(msg) \
{ \
  print "fatal: making $@: " msg | "cat >&2"; \
  exit 1; \
} \
function rst_section(header) \
{ \
  print header; \
  len = length(header); \
  for (i = 1; i <= len; i = i + 1) \
    printf "="; \
  printf "\n\n"; \
} \
{ \
  copy_in_global_log = 1; \
  global_test_result = "RUN"; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
         fatal("failed to read from " $$0 ".trs"); \
      if (line ~ /$(am__global_test_result_rx)/) \
        { \
          sub("$(am__global_test_result_rx)", "", line); \
          sub("[ 	]*$$", "", line); \
          global_test_result = line; \
        } \
      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \
        copy_in_global_log = 0; \
    }; \
  if (copy_in_global_log) \
    { \
      rst_section(global_test_result ": " $$0); \
      while ((rc = (getline line < ($$0 ".log"))) != 0) \
      { \
        if (rc < 0) \
          fatal("failed to read from " $$0 ".log"); \
        print line; \
      }; \
      printf "\n"; \
    }; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# Restructured Text title.
am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }
# Solaris 10 'make', and several other traditional 'make' implementations,
# pass "-e" to $(SHELL), and POSIX 2008 even requires this.  Work around it
# by disabling -e (using the XSI extension "set +e") if it's set.
am__sh_e_setup = case $$- in *e*) set +e;; esac
# Default flags passed to test drivers.
am__common_driver_flags = \
  --color-tests "$$am__color_tests" \
  --enable-hard-errors "$$am__enable_hard_errors" \
  --expect-failure "$$am__expect_failure"
# To be inserted before the command running the test.  Creates the
# directory for the log if needed.  Stores in $dir the directory
# containing $f, in $tst the test, in $log the log.  Executes the
# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and
# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that
# will run the test scripts (or their associated LOG_COMPILER, if
# thy have one).
am__check_pre = \
$(am__sh_e_setup);					\
$(am__vpath_adj_setup) $(am__vpath_adj)			\
$(am__tty_colors);					\
srcdir=$(srcdir); export srcdir;			\
case "$@" in						\
  */*) am__odir=`echo "./$@" | sed 's|/[^/]*$$||'`;;	\
    *) am__odir=.;; 					\
esac;							\
test "x$$am__odir" = x"." || test -d "$$am__odir" 	\
  || $(MKDIR_P) "$$am__odir" || exit $$?;		\
if test -f "./$$f"; then dir=./;			\
elif test -f "$$f"; then dir=;				\
else dir="$(srcdir)/"; fi;				\
tst=$$dir$$f; log='$@'; 				\
if test -n '$(DISABLE_HARD_ERRORS)'; then		\
  am__enable_hard_errors=no; 				\
else							\
  am__enable_hard_errors=yes; 				\
fi; 							\
case " $(XFAIL_TESTS) " in				\
  *[\ \	]$$f[\ \	]* | *[\ \	]$$dir$$f[\ \	]*) \
    am__expect_failure=yes;;				\
  *)							\
    am__expect_failure=no;;				\
esac; 							\
$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)
# A shell command to get the names of the tests scripts with any registered
# extension removed (i.e., equivalently, the names of the test logs, with
# the '.log' extension removed).  The result is saved in the shell variable
# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,
# we cannot use something simpler, involving e.g., "$(TEST_LOGS:.log=)",
# since that might cause problem with VPATH rewrites for suffix-less tests.
# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.
am__set_TESTS_bases = \
  bases='$(TEST_LOGS)'; \
  bases=`for i in $$bases; do echo $$i; done | sed 's/\.log$$//'`; \
  bases=`echo $$bases`
RECHECK_LOGS = $(TEST_LOGS)
TEST_SUITE_LOG = test-suite.log
TEST_EXTENSIONS = @EXEEXT@ .test
LOG_DRIVER = $(SHELL) $(top_srcdir)/test-driver
LOG_COMPILE = $(LOG_COMPILER) $(AM_LOG_FLAGS) $(LOG_FLAGS)
am__set_b = \
  case '$@' in \
    */*) \
      case '$*' in \
        */*) b='$*';; \
          *) b=`echo '$@' | sed 's/\.log$$//'`; \
       esac;; \
    *) \
      b='$*';; \
  esac
am__test_logs1 = $(TESTS:=.log)
am__test_logs2 = $(am__test_logs1:@EXEEXT@.log=.log)
TEST_LOGS = $(am__test_logs2:.test.log=.log)
TEST_LOG_DRIVER = $(SHELL) $(top_srcdir)/test-driver
TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \
	$(TEST_LOG_FLAGS)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
distdir = $(PACKAGE)-$(VERSION)
top_distdir = $(distdir)
am__remove_distdir = \
  if test -d "$(distdir)"; then \
    find "$(distdir)" -type d ! -perm -200 -exec chmod u+w {} ';' \
      && rm -rf "$(distdir)" \
      || { sleep 5 && rm -rf "$(distdir)"; }; \
  else :; fi
am__post_remove_distdir = $(am__remove_distdir)
DIST_ARCHIVES = $(distdir).tar.gz $(distdir).zip
GZIP_ENV = --best
DIST_TARGETS = dist-gzip dist-zip
distuninstallcheck_listfiles = find . -type f -print
am__distuninstallcheck_listfiles = $(distuninstallcheck_listfiles) \
  | sed 's|^\./|$(prefix)/|' | grep -v '$(infodir)/dir$$'
distcleancheck_listfiles = find . -type f -print
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AR = @AR@
ASCIIDOC = @ASCIIDOC@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
DOLT_BASH = @DOLT_BASH@
DOLT_CLEANFILES = @DOLT_CLEANFILES@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LTCOMPILE = @LTCOMPILE@
LTCXXCOMPILE = @LTCXXCOMPILE@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MANIFEST_TOOL = @MANIFEST_TOOL@
MKDIR_P = @MKDIR_P@
NM = @NM@
NMEDIT = @NMEDIT@
NN_ABI_VERSION = @NN_ABI_VERSION@
NN_LIBTOOL_VERSION = @NN_LIBTOOL_VERSION@
NN_PACKAGE_VERSION = @NN_PACKAGE_VERSION@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PTHREAD_CC = @PTHREAD_CC@
PTHREAD_CFLAGS = @PTHREAD_CFLAGS@
PTHREAD_LIBS = @PTHREAD_LIBS@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
XMLTO = @XMLTO@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
ax_pthread_config = @ax_pthread_config@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
ACLOCAL_AMFLAGS = -I m4
DISTCLEANFILES = @DOLT_CLEANFILES@

#  Extra files to be included into the source package.

################################################################################
#  RFCs                                                                        #
################################################################################
EXTRA_DIST = doc/asciidoc.conf doc/htmldoc.css $(MAN1) $(MAN3) $(MAN7) \
	tests/testutil.h ./rfc/sp-protocol-ids-01.txt \
	./rfc/sp-tcp-mapping-01.txt ./rfc/sp-udp-mapping-01.txt \
	./rfc/sp-tls-mapping-01.txt ./rfc/sp-request-reply-01.txt \
	./abi_version.sh ./package_version.sh ./src/CMakeLists.txt \
	./CMakeLists.txt

################################################################################
#  nanomsg library                                                             #
################################################################################
nnincludedir = $(includedir)/nanomsg
nninclude_HEADERS = \
    src/nn.h \
    src/inproc.h \
    src/ipc.h \
    src/tcp.h \
    src/pair.h \
    src/pubsub.h \
    src/reqrep.h \
    src/pipeline.h \
    src/survey.h \
    src/bus.h

lib_LTLIBRARIES = libnanomsg.la
NANOMSG_CORE = \
    src/core/ep.h \
    src/core/ep.c \
    src/core/epbase.c \
    src/core/global.h \
    src/core/global.c \
    src/core/pipe.c \
    src/core/poll.c \
    src/core/sock.h \
    src/core/sock.c \
    src/core/sockbase.c \
    src/core/symbol.c

NANOMSG_DEVICES = \
    src/devices/device.c \
    src/devices/device.h

NANOMSG_AIO = \
    src/aio/ctx.h \
    src/aio/ctx.c \
    src/aio/fsm.h \
    src/aio/fsm.c \
    src/aio/poller.h \
    src/aio/poller.c \
    src/aio/poller_epoll.h \
    src/aio/poller_epoll.inc \
    src/aio/poller_kqueue.h \
    src/aio/poller_kqueue.inc \
    src/aio/poller_poll.h \
    src/aio/poller_poll.inc \
    src/aio/pool.h \
    src/aio/pool.c \
    src/aio/timer.h \
    src/aio/timer.c \
    src/aio/timerset.h \
    src/aio/timerset.c \
    src/aio/usock.h \
    src/aio/usock.c \
    src/aio/usock_posix.h \
    src/aio/usock_posix.inc \
    src/aio/usock_win.h \
    src/aio/usock_win.inc \
    src/aio/worker.h \
    src/aio/worker.c \
    src/aio/worker_posix.h \
    src/aio/worker_posix.inc \
    src/aio/worker_win.h \
    src/aio/worker_win.inc

NANOMSG_UTILS = \
    src/utils/alloc.h \
    src/utils/alloc.c \
    src/utils/atomic.h \
    src/utils/atomic.c \
    src/utils/attr.h \
    src/utils/chunk.h \
    src/utils/chunk.c \
    src/utils/chunkref.h \
    src/utils/chunkref.c \
    src/utils/clock.h \
    src/utils/clock.c \
    src/utils/closefd.h \
    src/utils/closefd.c \
    src/utils/cont.h \
    src/utils/efd.h \
    src/utils/efd.c \
    src/utils/efd_eventfd.h \
    src/utils/efd_eventfd.inc \
    src/utils/efd_pipe.h \
    src/utils/efd_pipe.inc \
    src/utils/efd_socketpair.h \
    src/utils/efd_socketpair.inc \
    src/utils/efd_win.h \
    src/utils/efd_win.inc \
    src/utils/err.h \
    src/utils/err.c \
    src/utils/fast.h \
    src/utils/fd.h \
    src/utils/glock.h \
    src/utils/glock.c \
    src/utils/hash.h \
    src/utils/hash.c \
    src/utils/int.h \
    src/utils/list.h \
    src/utils/list.c \
    src/utils/msg.h \
    src/utils/msg.c \
    src/utils/mutex.h \
    src/utils/mutex.c \
    src/utils/queue.h \
    src/utils/queue.c \
    src/utils/random.h \
    src/utils/random.c \
    src/utils/sem.h \
    src/utils/sem.c \
    src/utils/sleep.h \
    src/utils/sleep.c \
    src/utils/stopwatch.h \
    src/utils/stopwatch.c \
    src/utils/thread.h \
    src/utils/thread.c \
    src/utils/thread_posix.h \
    src/utils/thread_posix.inc \
    src/utils/thread_win.h \
    src/utils/thread_win.inc \
    src/utils/win.h \
    src/utils/wire.h \
    src/utils/wire.c

PROTOCOLS_UTILS = \
    src/protocols/utils/dist.h \
    src/protocols/utils/dist.c \
    src/protocols/utils/excl.h \
    src/protocols/utils/excl.c \
    src/protocols/utils/fq.h \
    src/protocols/utils/fq.c \
    src/protocols/utils/lb.h \
    src/protocols/utils/lb.c \
    src/protocols/utils/priolist.h \
    src/protocols/utils/priolist.c

PROTOCOLS_BUS = \
    src/protocols/bus/bus.h \
    src/protocols/bus/bus.c \
    src/protocols/bus/xbus.h \
    src/protocols/bus/xbus.c

PROTOCOLS_PIPELINE = \
    src/protocols/pipeline/push.h \
    src/protocols/pipeline/push.c \
    src/protocols/pipeline/pull.h \
    src/protocols/pipeline/pull.c \
    src/protocols/pipeline/xpull.h \
    src/protocols/pipeline/xpull.c \
    src/protocols/pipeline/xpush.h \
    src/protocols/pipeline/xpush.c

PROTOCOLS_PAIR = \
    src/protocols/pair/pair.h \
    src/protocols/pair/pair.c \
    src/protocols/pair/xpair.h \
    src/protocols/pair/xpair.c

PROTOCOLS_PUBSUB = \
    src/protocols/pubsub/pub.h \
    src/protocols/pubsub/pub.c \
    src/protocols/pubsub/sub.h \
    src/protocols/pubsub/sub.c \
    src/protocols/pubsub/trie.h \
    src/protocols/pubsub/trie.c \
    src/protocols/pubsub/xpub.h \
    src/protocols/pubsub/xpub.c \
    src/protocols/pubsub/xsub.h \
    src/protocols/pubsub/xsub.c

PROTOCOLS_REQREP = \
    src/protocols/reqrep/req.h \
    src/protocols/reqrep/req.c \
    src/protocols/reqrep/rep.h \
    src/protocols/reqrep/rep.c \
    src/protocols/reqrep/task.h \
    src/protocols/reqrep/task.c \
    src/protocols/reqrep/xrep.h \
    src/protocols/reqrep/xrep.c \
    src/protocols/reqrep/xreq.h \
    src/protocols/reqrep/xreq.c

PROTOCOLS_SURVEY = \
    src/protocols/survey/respondent.h \
    src/protocols/survey/respondent.c \
    src/protocols/survey/surveyor.h \
    src/protocols/survey/surveyor.c \
    src/protocols/survey/xrespondent.h \
    src/protocols/survey/xrespondent.c \
    src/protocols/survey/xsurveyor.h \
    src/protocols/survey/xsurveyor.c

NANOMSG_PROTOCOLS = \
    $(PROTOCOLS_BUS) \
    $(PROTOCOLS_PIPELINE) \
    $(PROTOCOLS_PAIR) \
    $(PROTOCOLS_PUBSUB) \
    $(PROTOCOLS_REQREP) \
    $(PROTOCOLS_SURVEY) \
    $(PROTOCOLS_UTILS) \
    $(PROTOCOLS_INPROC) \
    $(PROTOCOLS_IPC) \
    $(PROTOCOLS_TCP)

TRANSPORTS_UTILS = \
    src/transports/utils/backoff.h \
    src/transports/utils/backoff.c \
    src/transports/utils/dns.h \
    src/transports/utils/dns.c \
    src/transports/utils/dns_getaddrinfo.h \
    src/transports/utils/dns_getaddrinfo.inc \
    src/transports/utils/dns_getaddrinfo_a.h \
    src/transports/utils/dns_getaddrinfo_a.inc \
    src/transports/utils/iface.h \
    src/transports/utils/iface.c \
    src/transports/utils/literal.h \
    src/transports/utils/literal.c \
    src/transports/utils/port.h \
    src/transports/utils/port.c \
    src/transports/utils/streamhdr.h \
    src/transports/utils/streamhdr.c

TRANSPORTS_INPROC = \
    src/transports/inproc/binproc.h \
    src/transports/inproc/binproc.c \
    src/transports/inproc/cinproc.h \
    src/transports/inproc/cinproc.c \
    src/transports/inproc/inproc.h \
    src/transports/inproc/inproc.c \
    src/transports/inproc/ins.h \
    src/transports/inproc/ins.c \
    src/transports/inproc/msgqueue.h \
    src/transports/inproc/msgqueue.c \
    src/transports/inproc/sinproc.h \
    src/transports/inproc/sinproc.c

TRANSPORTS_IPC = \
    src/transports/ipc/aipc.h \
    src/transports/ipc/aipc.c \
    src/transports/ipc/bipc.h \
    src/transports/ipc/bipc.c \
    src/transports/ipc/cipc.h \
    src/transports/ipc/cipc.c \
    src/transports/ipc/ipc.h \
    src/transports/ipc/ipc.c \
    src/transports/ipc/sipc.h \
    src/transports/ipc/sipc.c

TRANSPORTS_TCP = \
    src/transports/tcp/atcp.h \
    src/transports/tcp/atcp.c \
    src/transports/tcp/btcp.h \
    src/transports/tcp/btcp.c \
    src/transports/tcp/ctcp.h \
    src/transports/tcp/ctcp.c \
    src/transports/tcp/stcp.h \
    src/transports/tcp/stcp.c \
    src/transports/tcp/tcp.h \
    src/transports/tcp/tcp.c

NANOMSG_TRANSPORTS = \
    $(TRANSPORTS_UTILS) \
    $(TRANSPORTS_INPROC) \
    $(TRANSPORTS_IPC) \
    $(TRANSPORTS_TCP)

libnanomsg_la_SOURCES = \
    src/transport.h \
    src/protocol.h \
    $(NANOMSG_CORE) \
    $(NANOMSG_AIO) \
    $(NANOMSG_UTILS) \
    $(NANOMSG_PROTOCOLS) \
    $(NANOMSG_TRANSPORTS) \
    $(NANOMSG_DEVICES)

pkgconfigdir = $(libdir)/pkgconfig
pkgconfig_DATA = libnanomsg.pc
libnanomsg_la_LDFLAGS = -no-undefined -version-info @NN_LIBTOOL_VERSION@
libnanomsg_la_CFLAGS = -DNN_EXPORTS

################################################################################
#  documentation                                                               #
################################################################################

#  Source files.
MAN7 = \
    doc/nanomsg.txt \
    doc/nn_pair.txt \
    doc/nn_reqrep.txt \
    doc/nn_pubsub.txt \
    doc/nn_survey.txt \
    doc/nn_pipeline.txt \
    doc/nn_bus.txt \
    doc/nn_inproc.txt \
    doc/nn_ipc.txt \
    doc/nn_tcp.txt \
    doc/nn_env.txt

MAN3 = \
    doc/nn_errno.txt \
    doc/nn_strerror.txt \
    doc/nn_symbol.txt \
    doc/nn_symbol_info.txt \
    doc/nn_term.txt \
    doc/nn_allocmsg.txt \
    doc/nn_reallocmsg.txt \
    doc/nn_freemsg.txt \
    doc/nn_socket.txt \
    doc/nn_close.txt \
    doc/nn_getsockopt.txt \
    doc/nn_setsockopt.txt \
    doc/nn_bind.txt \
    doc/nn_connect.txt \
    doc/nn_shutdown.txt \
    doc/nn_send.txt \
    doc/nn_recv.txt \
    doc/nn_sendmsg.txt \
    doc/nn_recvmsg.txt \
    doc/nn_device.txt \
    doc/nn_cmsg.txt \
    doc/nn_poll.txt

MAN1 = \
    doc/nanocat.txt

@DOC_TRUE@SUFFIXES = .1 .3 .7 .1.html .3.html .7.html

#  Cause man pages to be generated and installed.
@DOC_TRUE@dist_man1_MANS = $(MAN1:%.txt=%.1)
@DOC_TRUE@dist_man3_MANS = $(MAN3:%.txt=%.3)
@DOC_TRUE@dist_man7_MANS = $(MAN7:%.txt=%.7)

#  Cause HTML docs to be generated.
@DOC_TRUE@doc_DATA = $(MAN1:%.txt=%.1.html) $(MAN3:%.txt=%.3.html) $(MAN7:%.txt=%.7.html)

#  Extra files to be cleaned.
@DOC_TRUE@CLEANFILES = $(MAN1:%.txt=%.1) $(MAN3:%.txt=%.3) $(MAN7:%.txt=%.7) \
@DOC_TRUE@    $(MAN1:%.txt=%.1.html) $(MAN3:%.txt=%.3.html) $(MAN7:%.txt=%.7.html)

LDADD = libnanomsg.la

################################################################################
#  automated tests                                                             #
################################################################################
TRANSPORT_TESTS = \
    tests/inproc \
    tests/inproc_shutdown \
    tests/ipc \
    tests/ipc_shutdown \
    tests/ipc_stress \
    tests/tcp \
    tests/tcp_shutdown

PROTOCOL_TESTS = \
    tests/pair \
    tests/pubsub \
    tests/reqrep \
    tests/pipeline \
    tests/survey \
    tests/bus

FEATURE_TESTS = \
    tests/block \
    tests/term \
    tests/timeo \
    tests/iovec \
    tests/msg \
    tests/prio \
    tests/poll \
    tests/device \
    tests/emfile \
    tests/domain \
    tests/trie \
    tests/list \
    tests/hash \
    tests/symbol \
    tests/separation \
    tests/zerocopy \
    tests/shutdown \
    tests/cmsg

TESTS = $(check_PROGRAMS)
nanocat_SOURCES = \
	tools/nanocat.c \
	tools/options.c \
	tools/options.h

all: all-am

.SUFFIXES:
.SUFFIXES: .1 .3 .7 .1.html .3.html .7.html .c .lo .log .o .obj .test .test$(EXEEXT) .trs .txt .xml
am--refresh: Makefile
	@:
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      echo ' cd $(srcdir) && $(AUTOMAKE) --foreign'; \
	      $(am__cd) $(srcdir) && $(AUTOMAKE) --foreign \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    echo ' $(SHELL) ./config.status'; \
	    $(SHELL) ./config.status;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	$(SHELL) ./config.status --recheck

$(top_srcdir)/configure:  $(am__configure_deps)
	$(am__cd) $(srcdir) && $(AUTOCONF)
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	$(am__cd) $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)
$(am__aclocal_m4_deps):
libnanomsg.pc: $(top_builddir)/config.status $(srcdir)/libnanomsg.pc.in
	cd $(top_builddir) && $(SHELL) ./config.status $@

install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libdir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}
src/core/$(am__dirstamp):
	@$(MKDIR_P) src/core
	@: > src/core/$(am__dirstamp)
src/core/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/core/$(DEPDIR)
	@: > src/core/$(DEPDIR)/$(am__dirstamp)
src/core/libnanomsg_la-ep.lo: src/core/$(am__dirstamp) \
	src/core/$(DEPDIR)/$(am__dirstamp)
src/core/libnanomsg_la-epbase.lo: src/core/$(am__dirstamp) \
	src/core/$(DEPDIR)/$(am__dirstamp)
src/core/libnanomsg_la-global.lo: src/core/$(am__dirstamp) \
	src/core/$(DEPDIR)/$(am__dirstamp)
src/core/libnanomsg_la-pipe.lo: src/core/$(am__dirstamp) \
	src/core/$(DEPDIR)/$(am__dirstamp)
src/core/libnanomsg_la-poll.lo: src/core/$(am__dirstamp) \
	src/core/$(DEPDIR)/$(am__dirstamp)
src/core/libnanomsg_la-sock.lo: src/core/$(am__dirstamp) \
	src/core/$(DEPDIR)/$(am__dirstamp)
src/core/libnanomsg_la-sockbase.lo: src/core/$(am__dirstamp) \
	src/core/$(DEPDIR)/$(am__dirstamp)
src/core/libnanomsg_la-symbol.lo: src/core/$(am__dirstamp) \
	src/core/$(DEPDIR)/$(am__dirstamp)
src/aio/$(am__dirstamp):
	@$(MKDIR_P) src/aio
	@: > src/aio/$(am__dirstamp)
src/aio/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/aio/$(DEPDIR)
	@: > src/aio/$(DEPDIR)/$(am__dirstamp)
src/aio/libnanomsg_la-ctx.lo: src/aio/$(am__dirstamp) \
	src/aio/$(DEPDIR)/$(am__dirstamp)
src/aio/libnanomsg_la-fsm.lo: src/aio/$(am__dirstamp) \
	src/aio/$(DEPDIR)/$(am__dirstamp)
src/aio/libnanomsg_la-poller.lo: src/aio/$(am__dirstamp) \
	src/aio/$(DEPDIR)/$(am__dirstamp)
src/aio/libnanomsg_la-pool.lo: src/aio/$(am__dirstamp) \
	src/aio/$(DEPDIR)/$(am__dirstamp)
src/aio/libnanomsg_la-timer.lo: src/aio/$(am__dirstamp) \
	src/aio/$(DEPDIR)/$(am__dirstamp)
src/aio/libnanomsg_la-timerset.lo: src/aio/$(am__dirstamp) \
	src/aio/$(DEPDIR)/$(am__dirstamp)
src/aio/libnanomsg_la-usock.lo: src/aio/$(am__dirstamp) \
	src/aio/$(DEPDIR)/$(am__dirstamp)
src/aio/libnanomsg_la-worker.lo: src/aio/$(am__dirstamp) \
	src/aio/$(DEPDIR)/$(am__dirstamp)
src/utils/$(am__dirstamp):
	@$(MKDIR_P) src/utils
	@: > src/utils/$(am__dirstamp)
src/utils/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/utils/$(DEPDIR)
	@: > src/utils/$(DEPDIR)/$(am__dirstamp)
src/utils/libnanomsg_la-alloc.lo: src/utils/$(am__dirstamp) \
	src/utils/$(DEPDIR)/$(am__dirstamp)
src/utils/libnanomsg_la-atomic.lo: src/utils/$(am__dirstamp) \
	src/utils/$(DEPDIR)/$(am__dirstamp)
src/utils/libnanomsg_la-chunk.lo: src/utils/$(am__dirstamp) \
	src/utils/$(DEPDIR)/$(am__dirstamp)
src/utils/libnanomsg_la-chunkref.lo: src/utils/$(am__dirstamp) \
	src/utils/$(DEPDIR)/$(am__dirstamp)
src/utils/libnanomsg_la-clock.lo: src/utils/$(am__dirstamp) \
	src/utils/$(DEPDIR)/$(am__dirstamp)
src/utils/libnanomsg_la-closefd.lo: src/utils/$(am__dirstamp) \
	src/utils/$(DEPDIR)/$(am__dirstamp)
src/utils/libnanomsg_la-efd.lo: src/utils/$(am__dirstamp) \
	src/utils/$(DEPDIR)/$(am__dirstamp)
src/utils/libnanomsg_la-err.lo: src/utils/$(am__dirstamp) \
	src/utils/$(DEPDIR)/$(am__dirstamp)
src/utils/libnanomsg_la-glock.lo: src/utils/$(am__dirstamp) \
	src/utils/$(DEPDIR)/$(am__dirstamp)
src/utils/libnanomsg_la-hash.lo: src/utils/$(am__dirstamp) \
	src/utils/$(DEPDIR)/$(am__dirstamp)
src/utils/libnanomsg_la-list.lo: src/utils/$(am__dirstamp) \
	src/utils/$(DEPDIR)/$(am__dirstamp)
src/utils/libnanomsg_la-msg.lo: src/utils/$(am__dirstamp) \
	src/utils/$(DEPDIR)/$(am__dirstamp)
src/utils/libnanomsg_la-mutex.lo: src/utils/$(am__dirstamp) \
	src/utils/$(DEPDIR)/$(am__dirstamp)
src/utils/libnanomsg_la-queue.lo: src/utils/$(am__dirstamp) \
	src/utils/$(DEPDIR)/$(am__dirstamp)
src/utils/libnanomsg_la-random.lo: src/utils/$(am__dirstamp) \
	src/utils/$(DEPDIR)/$(am__dirstamp)
src/utils/libnanomsg_la-sem.lo: src/utils/$(am__dirstamp) \
	src/utils/$(DEPDIR)/$(am__dirstamp)
src/utils/libnanomsg_la-sleep.lo: src/utils/$(am__dirstamp) \
	src/utils/$(DEPDIR)/$(am__dirstamp)
src/utils/libnanomsg_la-stopwatch.lo: src/utils/$(am__dirstamp) \
	src/utils/$(DEPDIR)/$(am__dirstamp)
src/utils/libnanomsg_la-thread.lo: src/utils/$(am__dirstamp) \
	src/utils/$(DEPDIR)/$(am__dirstamp)
src/utils/libnanomsg_la-wire.lo: src/utils/$(am__dirstamp) \
	src/utils/$(DEPDIR)/$(am__dirstamp)
src/protocols/bus/$(am__dirstamp):
	@$(MKDIR_P) src/protocols/bus
	@: > src/protocols/bus/$(am__dirstamp)
src/protocols/bus/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/protocols/bus/$(DEPDIR)
	@: > src/protocols/bus/$(DEPDIR)/$(am__dirstamp)
src/protocols/bus/libnanomsg_la-bus.lo:  \
	src/protocols/bus/$(am__dirstamp) \
	src/protocols/bus/$(DEPDIR)/$(am__dirstamp)
src/protocols/bus/libnanomsg_la-xbus.lo:  \
	src/protocols/bus/$(am__dirstamp) \
	src/protocols/bus/$(DEPDIR)/$(am__dirstamp)
src/protocols/pipeline/$(am__dirstamp):
	@$(MKDIR_P) src/protocols/pipeline
	@: > src/protocols/pipeline/$(am__dirstamp)
src/protocols/pipeline/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/protocols/pipeline/$(DEPDIR)
	@: > src/protocols/pipeline/$(DEPDIR)/$(am__dirstamp)
src/protocols/pipeline/libnanomsg_la-push.lo:  \
	src/protocols/pipeline/$(am__dirstamp) \
	src/protocols/pipeline/$(DEPDIR)/$(am__dirstamp)
src/protocols/pipeline/libnanomsg_la-pull.lo:  \
	src/protocols/pipeline/$(am__dirstamp) \
	src/protocols/pipeline/$(DEPDIR)/$(am__dirstamp)
src/protocols/pipeline/libnanomsg_la-xpull.lo:  \
	src/protocols/pipeline/$(am__dirstamp) \
	src/protocols/pipeline/$(DEPDIR)/$(am__dirstamp)
src/protocols/pipeline/libnanomsg_la-xpush.lo:  \
	src/protocols/pipeline/$(am__dirstamp) \
	src/protocols/pipeline/$(DEPDIR)/$(am__dirstamp)
src/protocols/pair/$(am__dirstamp):
	@$(MKDIR_P) src/protocols/pair
	@: > src/protocols/pair/$(am__dirstamp)
src/protocols/pair/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/protocols/pair/$(DEPDIR)
	@: > src/protocols/pair/$(DEPDIR)/$(am__dirstamp)
src/protocols/pair/libnanomsg_la-pair.lo:  \
	src/protocols/pair/$(am__dirstamp) \
	src/protocols/pair/$(DEPDIR)/$(am__dirstamp)
src/protocols/pair/libnanomsg_la-xpair.lo:  \
	src/protocols/pair/$(am__dirstamp) \
	src/protocols/pair/$(DEPDIR)/$(am__dirstamp)
src/protocols/pubsub/$(am__dirstamp):
	@$(MKDIR_P) src/protocols/pubsub
	@: > src/protocols/pubsub/$(am__dirstamp)
src/protocols/pubsub/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/protocols/pubsub/$(DEPDIR)
	@: > src/protocols/pubsub/$(DEPDIR)/$(am__dirstamp)
src/protocols/pubsub/libnanomsg_la-pub.lo:  \
	src/protocols/pubsub/$(am__dirstamp) \
	src/protocols/pubsub/$(DEPDIR)/$(am__dirstamp)
src/protocols/pubsub/libnanomsg_la-sub.lo:  \
	src/protocols/pubsub/$(am__dirstamp) \
	src/protocols/pubsub/$(DEPDIR)/$(am__dirstamp)
src/protocols/pubsub/libnanomsg_la-trie.lo:  \
	src/protocols/pubsub/$(am__dirstamp) \
	src/protocols/pubsub/$(DEPDIR)/$(am__dirstamp)
src/protocols/pubsub/libnanomsg_la-xpub.lo:  \
	src/protocols/pubsub/$(am__dirstamp) \
	src/protocols/pubsub/$(DEPDIR)/$(am__dirstamp)
src/protocols/pubsub/libnanomsg_la-xsub.lo:  \
	src/protocols/pubsub/$(am__dirstamp) \
	src/protocols/pubsub/$(DEPDIR)/$(am__dirstamp)
src/protocols/reqrep/$(am__dirstamp):
	@$(MKDIR_P) src/protocols/reqrep
	@: > src/protocols/reqrep/$(am__dirstamp)
src/protocols/reqrep/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/protocols/reqrep/$(DEPDIR)
	@: > src/protocols/reqrep/$(DEPDIR)/$(am__dirstamp)
src/protocols/reqrep/libnanomsg_la-req.lo:  \
	src/protocols/reqrep/$(am__dirstamp) \
	src/protocols/reqrep/$(DEPDIR)/$(am__dirstamp)
src/protocols/reqrep/libnanomsg_la-rep.lo:  \
	src/protocols/reqrep/$(am__dirstamp) \
	src/protocols/reqrep/$(DEPDIR)/$(am__dirstamp)
src/protocols/reqrep/libnanomsg_la-task.lo:  \
	src/protocols/reqrep/$(am__dirstamp) \
	src/protocols/reqrep/$(DEPDIR)/$(am__dirstamp)
src/protocols/reqrep/libnanomsg_la-xrep.lo:  \
	src/protocols/reqrep/$(am__dirstamp) \
	src/protocols/reqrep/$(DEPDIR)/$(am__dirstamp)
src/protocols/reqrep/libnanomsg_la-xreq.lo:  \
	src/protocols/reqrep/$(am__dirstamp) \
	src/protocols/reqrep/$(DEPDIR)/$(am__dirstamp)
src/protocols/survey/$(am__dirstamp):
	@$(MKDIR_P) src/protocols/survey
	@: > src/protocols/survey/$(am__dirstamp)
src/protocols/survey/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/protocols/survey/$(DEPDIR)
	@: > src/protocols/survey/$(DEPDIR)/$(am__dirstamp)
src/protocols/survey/libnanomsg_la-respondent.lo:  \
	src/protocols/survey/$(am__dirstamp) \
	src/protocols/survey/$(DEPDIR)/$(am__dirstamp)
src/protocols/survey/libnanomsg_la-surveyor.lo:  \
	src/protocols/survey/$(am__dirstamp) \
	src/protocols/survey/$(DEPDIR)/$(am__dirstamp)
src/protocols/survey/libnanomsg_la-xrespondent.lo:  \
	src/protocols/survey/$(am__dirstamp) \
	src/protocols/survey/$(DEPDIR)/$(am__dirstamp)
src/protocols/survey/libnanomsg_la-xsurveyor.lo:  \
	src/protocols/survey/$(am__dirstamp) \
	src/protocols/survey/$(DEPDIR)/$(am__dirstamp)
src/protocols/utils/$(am__dirstamp):
	@$(MKDIR_P) src/protocols/utils
	@: > src/protocols/utils/$(am__dirstamp)
src/protocols/utils/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/protocols/utils/$(DEPDIR)
	@: > src/protocols/utils/$(DEPDIR)/$(am__dirstamp)
src/protocols/utils/libnanomsg_la-dist.lo:  \
	src/protocols/utils/$(am__dirstamp) \
	src/protocols/utils/$(DEPDIR)/$(am__dirstamp)
src/protocols/utils/libnanomsg_la-excl.lo:  \
	src/protocols/utils/$(am__dirstamp) \
	src/protocols/utils/$(DEPDIR)/$(am__dirstamp)
src/protocols/utils/libnanomsg_la-fq.lo:  \
	src/protocols/utils/$(am__dirstamp) \
	src/protocols/utils/$(DEPDIR)/$(am__dirstamp)
src/protocols/utils/libnanomsg_la-lb.lo:  \
	src/protocols/utils/$(am__dirstamp) \
	src/protocols/utils/$(DEPDIR)/$(am__dirstamp)
src/protocols/utils/libnanomsg_la-priolist.lo:  \
	src/protocols/utils/$(am__dirstamp) \
	src/protocols/utils/$(DEPDIR)/$(am__dirstamp)
src/transports/utils/$(am__dirstamp):
	@$(MKDIR_P) src/transports/utils
	@: > src/transports/utils/$(am__dirstamp)
src/transports/utils/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/transports/utils/$(DEPDIR)
	@: > src/transports/utils/$(DEPDIR)/$(am__dirstamp)
src/transports/utils/libnanomsg_la-backoff.lo:  \
	src/transports/utils/$(am__dirstamp) \
	src/transports/utils/$(DEPDIR)/$(am__dirstamp)
src/transports/utils/libnanomsg_la-dns.lo:  \
	src/transports/utils/$(am__dirstamp) \
	src/transports/utils/$(DEPDIR)/$(am__dirstamp)
src/transports/utils/libnanomsg_la-iface.lo:  \
	src/transports/utils/$(am__dirstamp) \
	src/transports/utils/$(DEPDIR)/$(am__dirstamp)
src/transports/utils/libnanomsg_la-literal.lo:  \
	src/transports/utils/$(am__dirstamp) \
	src/transports/utils/$(DEPDIR)/$(am__dirstamp)
src/transports/utils/libnanomsg_la-port.lo:  \
	src/transports/utils/$(am__dirstamp) \
	src/transports/utils/$(DEPDIR)/$(am__dirstamp)
src/transports/utils/libnanomsg_la-streamhdr.lo:  \
	src/transports/utils/$(am__dirstamp) \
	src/transports/utils/$(DEPDIR)/$(am__dirstamp)
src/transports/inproc/$(am__dirstamp):
	@$(MKDIR_P) src/transports/inproc
	@: > src/transports/inproc/$(am__dirstamp)
src/transports/inproc/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/transports/inproc/$(DEPDIR)
	@: > src/transports/inproc/$(DEPDIR)/$(am__dirstamp)
src/transports/inproc/libnanomsg_la-binproc.lo:  \
	src/transports/inproc/$(am__dirstamp) \
	src/transports/inproc/$(DEPDIR)/$(am__dirstamp)
src/transports/inproc/libnanomsg_la-cinproc.lo:  \
	src/transports/inproc/$(am__dirstamp) \
	src/transports/inproc/$(DEPDIR)/$(am__dirstamp)
src/transports/inproc/libnanomsg_la-inproc.lo:  \
	src/transports/inproc/$(am__dirstamp) \
	src/transports/inproc/$(DEPDIR)/$(am__dirstamp)
src/transports/inproc/libnanomsg_la-ins.lo:  \
	src/transports/inproc/$(am__dirstamp) \
	src/transports/inproc/$(DEPDIR)/$(am__dirstamp)
src/transports/inproc/libnanomsg_la-msgqueue.lo:  \
	src/transports/inproc/$(am__dirstamp) \
	src/transports/inproc/$(DEPDIR)/$(am__dirstamp)
src/transports/inproc/libnanomsg_la-sinproc.lo:  \
	src/transports/inproc/$(am__dirstamp) \
	src/transports/inproc/$(DEPDIR)/$(am__dirstamp)
src/transports/ipc/$(am__dirstamp):
	@$(MKDIR_P) src/transports/ipc
	@: > src/transports/ipc/$(am__dirstamp)
src/transports/ipc/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/transports/ipc/$(DEPDIR)
	@: > src/transports/ipc/$(DEPDIR)/$(am__dirstamp)
src/transports/ipc/libnanomsg_la-aipc.lo:  \
	src/transports/ipc/$(am__dirstamp) \
	src/transports/ipc/$(DEPDIR)/$(am__dirstamp)
src/transports/ipc/libnanomsg_la-bipc.lo:  \
	src/transports/ipc/$(am__dirstamp) \
	src/transports/ipc/$(DEPDIR)/$(am__dirstamp)
src/transports/ipc/libnanomsg_la-cipc.lo:  \
	src/transports/ipc/$(am__dirstamp) \
	src/transports/ipc/$(DEPDIR)/$(am__dirstamp)
src/transports/ipc/libnanomsg_la-ipc.lo:  \
	src/transports/ipc/$(am__dirstamp) \
	src/transports/ipc/$(DEPDIR)/$(am__dirstamp)
src/transports/ipc/libnanomsg_la-sipc.lo:  \
	src/transports/ipc/$(am__dirstamp) \
	src/transports/ipc/$(DEPDIR)/$(am__dirstamp)
src/transports/tcp/$(am__dirstamp):
	@$(MKDIR_P) src/transports/tcp
	@: > src/transports/tcp/$(am__dirstamp)
src/transports/tcp/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/transports/tcp/$(DEPDIR)
	@: > src/transports/tcp/$(DEPDIR)/$(am__dirstamp)
src/transports/tcp/libnanomsg_la-atcp.lo:  \
	src/transports/tcp/$(am__dirstamp) \
	src/transports/tcp/$(DEPDIR)/$(am__dirstamp)
src/transports/tcp/libnanomsg_la-btcp.lo:  \
	src/transports/tcp/$(am__dirstamp) \
	src/transports/tcp/$(DEPDIR)/$(am__dirstamp)
src/transports/tcp/libnanomsg_la-ctcp.lo:  \
	src/transports/tcp/$(am__dirstamp) \
	src/transports/tcp/$(DEPDIR)/$(am__dirstamp)
src/transports/tcp/libnanomsg_la-stcp.lo:  \
	src/transports/tcp/$(am__dirstamp) \
	src/transports/tcp/$(DEPDIR)/$(am__dirstamp)
src/transports/tcp/libnanomsg_la-tcp.lo:  \
	src/transports/tcp/$(am__dirstamp) \
	src/transports/tcp/$(DEPDIR)/$(am__dirstamp)
src/devices/$(am__dirstamp):
	@$(MKDIR_P) src/devices
	@: > src/devices/$(am__dirstamp)
src/devices/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/devices/$(DEPDIR)
	@: > src/devices/$(DEPDIR)/$(am__dirstamp)
src/devices/libnanomsg_la-device.lo: src/devices/$(am__dirstamp) \
	src/devices/$(DEPDIR)/$(am__dirstamp)

libnanomsg.la: $(libnanomsg_la_OBJECTS) $(libnanomsg_la_DEPENDENCIES) $(EXTRA_libnanomsg_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libnanomsg_la_LINK) -rpath $(libdir) $(libnanomsg_la_OBJECTS) $(libnanomsg_la_LIBADD) $(LIBS)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	 || test -f $$p1 \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

clean-noinstPROGRAMS:
	@list='$(noinst_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
tools/$(am__dirstamp):
	@$(MKDIR_P) tools
	@: > tools/$(am__dirstamp)
tools/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) tools/$(DEPDIR)
	@: > tools/$(DEPDIR)/$(am__dirstamp)
tools/nanocat.$(OBJEXT): tools/$(am__dirstamp) \
	tools/$(DEPDIR)/$(am__dirstamp)
tools/options.$(OBJEXT): tools/$(am__dirstamp) \
	tools/$(DEPDIR)/$(am__dirstamp)

nanocat$(EXEEXT): $(nanocat_OBJECTS) $(nanocat_DEPENDENCIES) $(EXTRA_nanocat_DEPENDENCIES) 
	@rm -f nanocat$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(nanocat_OBJECTS) $(nanocat_LDADD) $(LIBS)
perf/$(am__dirstamp):
	@$(MKDIR_P) perf
	@: > perf/$(am__dirstamp)
perf/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) perf/$(DEPDIR)
	@: > perf/$(DEPDIR)/$(am__dirstamp)
perf/inproc_lat.$(OBJEXT): perf/$(am__dirstamp) \
	perf/$(DEPDIR)/$(am__dirstamp)

perf/inproc_lat$(EXEEXT): $(perf_inproc_lat_OBJECTS) $(perf_inproc_lat_DEPENDENCIES) $(EXTRA_perf_inproc_lat_DEPENDENCIES) perf/$(am__dirstamp)
	@rm -f perf/inproc_lat$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(perf_inproc_lat_OBJECTS) $(perf_inproc_lat_LDADD) $(LIBS)
perf/inproc_thr.$(OBJEXT): perf/$(am__dirstamp) \
	perf/$(DEPDIR)/$(am__dirstamp)

perf/inproc_thr$(EXEEXT): $(perf_inproc_thr_OBJECTS) $(perf_inproc_thr_DEPENDENCIES) $(EXTRA_perf_inproc_thr_DEPENDENCIES) perf/$(am__dirstamp)
	@rm -f perf/inproc_thr$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(perf_inproc_thr_OBJECTS) $(perf_inproc_thr_LDADD) $(LIBS)
perf/local_lat.$(OBJEXT): perf/$(am__dirstamp) \
	perf/$(DEPDIR)/$(am__dirstamp)

perf/local_lat$(EXEEXT): $(perf_local_lat_OBJECTS) $(perf_local_lat_DEPENDENCIES) $(EXTRA_perf_local_lat_DEPENDENCIES) perf/$(am__dirstamp)
	@rm -f perf/local_lat$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(perf_local_lat_OBJECTS) $(perf_local_lat_LDADD) $(LIBS)
perf/local_thr.$(OBJEXT): perf/$(am__dirstamp) \
	perf/$(DEPDIR)/$(am__dirstamp)

perf/local_thr$(EXEEXT): $(perf_local_thr_OBJECTS) $(perf_local_thr_DEPENDENCIES) $(EXTRA_perf_local_thr_DEPENDENCIES) perf/$(am__dirstamp)
	@rm -f perf/local_thr$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(perf_local_thr_OBJECTS) $(perf_local_thr_LDADD) $(LIBS)
perf/remote_lat.$(OBJEXT): perf/$(am__dirstamp) \
	perf/$(DEPDIR)/$(am__dirstamp)

perf/remote_lat$(EXEEXT): $(perf_remote_lat_OBJECTS) $(perf_remote_lat_DEPENDENCIES) $(EXTRA_perf_remote_lat_DEPENDENCIES) perf/$(am__dirstamp)
	@rm -f perf/remote_lat$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(perf_remote_lat_OBJECTS) $(perf_remote_lat_LDADD) $(LIBS)
perf/remote_thr.$(OBJEXT): perf/$(am__dirstamp) \
	perf/$(DEPDIR)/$(am__dirstamp)

perf/remote_thr$(EXEEXT): $(perf_remote_thr_OBJECTS) $(perf_remote_thr_DEPENDENCIES) $(EXTRA_perf_remote_thr_DEPENDENCIES) perf/$(am__dirstamp)
	@rm -f perf/remote_thr$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(perf_remote_thr_OBJECTS) $(perf_remote_thr_LDADD) $(LIBS)
tests/$(am__dirstamp):
	@$(MKDIR_P) tests
	@: > tests/$(am__dirstamp)
tests/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) tests/$(DEPDIR)
	@: > tests/$(DEPDIR)/$(am__dirstamp)
tests/block.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/block$(EXEEXT): $(tests_block_OBJECTS) $(tests_block_DEPENDENCIES) $(EXTRA_tests_block_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/block$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_block_OBJECTS) $(tests_block_LDADD) $(LIBS)
tests/bus.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/bus$(EXEEXT): $(tests_bus_OBJECTS) $(tests_bus_DEPENDENCIES) $(EXTRA_tests_bus_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/bus$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_bus_OBJECTS) $(tests_bus_LDADD) $(LIBS)
tests/cmsg.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/cmsg$(EXEEXT): $(tests_cmsg_OBJECTS) $(tests_cmsg_DEPENDENCIES) $(EXTRA_tests_cmsg_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/cmsg$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_cmsg_OBJECTS) $(tests_cmsg_LDADD) $(LIBS)
tests/device.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/device$(EXEEXT): $(tests_device_OBJECTS) $(tests_device_DEPENDENCIES) $(EXTRA_tests_device_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/device$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_device_OBJECTS) $(tests_device_LDADD) $(LIBS)
tests/domain.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/domain$(EXEEXT): $(tests_domain_OBJECTS) $(tests_domain_DEPENDENCIES) $(EXTRA_tests_domain_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/domain$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_domain_OBJECTS) $(tests_domain_LDADD) $(LIBS)
tests/emfile.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/emfile$(EXEEXT): $(tests_emfile_OBJECTS) $(tests_emfile_DEPENDENCIES) $(EXTRA_tests_emfile_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/emfile$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_emfile_OBJECTS) $(tests_emfile_LDADD) $(LIBS)
tests/hash.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/hash$(EXEEXT): $(tests_hash_OBJECTS) $(tests_hash_DEPENDENCIES) $(EXTRA_tests_hash_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/hash$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_hash_OBJECTS) $(tests_hash_LDADD) $(LIBS)
tests/inproc.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/inproc$(EXEEXT): $(tests_inproc_OBJECTS) $(tests_inproc_DEPENDENCIES) $(EXTRA_tests_inproc_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/inproc$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_inproc_OBJECTS) $(tests_inproc_LDADD) $(LIBS)
tests/inproc_shutdown.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/inproc_shutdown$(EXEEXT): $(tests_inproc_shutdown_OBJECTS) $(tests_inproc_shutdown_DEPENDENCIES) $(EXTRA_tests_inproc_shutdown_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/inproc_shutdown$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_inproc_shutdown_OBJECTS) $(tests_inproc_shutdown_LDADD) $(LIBS)
tests/iovec.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/iovec$(EXEEXT): $(tests_iovec_OBJECTS) $(tests_iovec_DEPENDENCIES) $(EXTRA_tests_iovec_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/iovec$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_iovec_OBJECTS) $(tests_iovec_LDADD) $(LIBS)
tests/ipc.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/ipc$(EXEEXT): $(tests_ipc_OBJECTS) $(tests_ipc_DEPENDENCIES) $(EXTRA_tests_ipc_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/ipc$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_ipc_OBJECTS) $(tests_ipc_LDADD) $(LIBS)
tests/ipc_shutdown.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/ipc_shutdown$(EXEEXT): $(tests_ipc_shutdown_OBJECTS) $(tests_ipc_shutdown_DEPENDENCIES) $(EXTRA_tests_ipc_shutdown_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/ipc_shutdown$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_ipc_shutdown_OBJECTS) $(tests_ipc_shutdown_LDADD) $(LIBS)
tests/ipc_stress.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/ipc_stress$(EXEEXT): $(tests_ipc_stress_OBJECTS) $(tests_ipc_stress_DEPENDENCIES) $(EXTRA_tests_ipc_stress_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/ipc_stress$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_ipc_stress_OBJECTS) $(tests_ipc_stress_LDADD) $(LIBS)
tests/list.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/list$(EXEEXT): $(tests_list_OBJECTS) $(tests_list_DEPENDENCIES) $(EXTRA_tests_list_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/list$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_list_OBJECTS) $(tests_list_LDADD) $(LIBS)
tests/msg.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/msg$(EXEEXT): $(tests_msg_OBJECTS) $(tests_msg_DEPENDENCIES) $(EXTRA_tests_msg_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/msg$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_msg_OBJECTS) $(tests_msg_LDADD) $(LIBS)
tests/pair.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/pair$(EXEEXT): $(tests_pair_OBJECTS) $(tests_pair_DEPENDENCIES) $(EXTRA_tests_pair_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/pair$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_pair_OBJECTS) $(tests_pair_LDADD) $(LIBS)
tests/pipeline.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/pipeline$(EXEEXT): $(tests_pipeline_OBJECTS) $(tests_pipeline_DEPENDENCIES) $(EXTRA_tests_pipeline_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/pipeline$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_pipeline_OBJECTS) $(tests_pipeline_LDADD) $(LIBS)
tests/poll.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/poll$(EXEEXT): $(tests_poll_OBJECTS) $(tests_poll_DEPENDENCIES) $(EXTRA_tests_poll_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/poll$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_poll_OBJECTS) $(tests_poll_LDADD) $(LIBS)
tests/prio.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/prio$(EXEEXT): $(tests_prio_OBJECTS) $(tests_prio_DEPENDENCIES) $(EXTRA_tests_prio_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/prio$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_prio_OBJECTS) $(tests_prio_LDADD) $(LIBS)
tests/pubsub.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/pubsub$(EXEEXT): $(tests_pubsub_OBJECTS) $(tests_pubsub_DEPENDENCIES) $(EXTRA_tests_pubsub_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/pubsub$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_pubsub_OBJECTS) $(tests_pubsub_LDADD) $(LIBS)
tests/reqrep.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/reqrep$(EXEEXT): $(tests_reqrep_OBJECTS) $(tests_reqrep_DEPENDENCIES) $(EXTRA_tests_reqrep_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/reqrep$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_reqrep_OBJECTS) $(tests_reqrep_LDADD) $(LIBS)
tests/separation.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/separation$(EXEEXT): $(tests_separation_OBJECTS) $(tests_separation_DEPENDENCIES) $(EXTRA_tests_separation_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/separation$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_separation_OBJECTS) $(tests_separation_LDADD) $(LIBS)
tests/shutdown.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/shutdown$(EXEEXT): $(tests_shutdown_OBJECTS) $(tests_shutdown_DEPENDENCIES) $(EXTRA_tests_shutdown_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/shutdown$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_shutdown_OBJECTS) $(tests_shutdown_LDADD) $(LIBS)
tests/survey.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/survey$(EXEEXT): $(tests_survey_OBJECTS) $(tests_survey_DEPENDENCIES) $(EXTRA_tests_survey_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/survey$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_survey_OBJECTS) $(tests_survey_LDADD) $(LIBS)
tests/symbol.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/symbol$(EXEEXT): $(tests_symbol_OBJECTS) $(tests_symbol_DEPENDENCIES) $(EXTRA_tests_symbol_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/symbol$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_symbol_OBJECTS) $(tests_symbol_LDADD) $(LIBS)
tests/tcp.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/tcp$(EXEEXT): $(tests_tcp_OBJECTS) $(tests_tcp_DEPENDENCIES) $(EXTRA_tests_tcp_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/tcp$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_tcp_OBJECTS) $(tests_tcp_LDADD) $(LIBS)
tests/tcp_shutdown.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/tcp_shutdown$(EXEEXT): $(tests_tcp_shutdown_OBJECTS) $(tests_tcp_shutdown_DEPENDENCIES) $(EXTRA_tests_tcp_shutdown_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/tcp_shutdown$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_tcp_shutdown_OBJECTS) $(tests_tcp_shutdown_LDADD) $(LIBS)
tests/term.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/term$(EXEEXT): $(tests_term_OBJECTS) $(tests_term_DEPENDENCIES) $(EXTRA_tests_term_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/term$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_term_OBJECTS) $(tests_term_LDADD) $(LIBS)
tests/timeo.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/timeo$(EXEEXT): $(tests_timeo_OBJECTS) $(tests_timeo_DEPENDENCIES) $(EXTRA_tests_timeo_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/timeo$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_timeo_OBJECTS) $(tests_timeo_LDADD) $(LIBS)
tests/trie.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/trie$(EXEEXT): $(tests_trie_OBJECTS) $(tests_trie_DEPENDENCIES) $(EXTRA_tests_trie_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/trie$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_trie_OBJECTS) $(tests_trie_LDADD) $(LIBS)
tests/zerocopy.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/zerocopy$(EXEEXT): $(tests_zerocopy_OBJECTS) $(tests_zerocopy_DEPENDENCIES) $(EXTRA_tests_zerocopy_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/zerocopy$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_zerocopy_OBJECTS) $(tests_zerocopy_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f perf/*.$(OBJEXT)
	-rm -f src/aio/*.$(OBJEXT)
	-rm -f src/aio/*.lo
	-rm -f src/core/*.$(OBJEXT)
	-rm -f src/core/*.lo
	-rm -f src/devices/*.$(OBJEXT)
	-rm -f src/devices/*.lo
	-rm -f src/protocols/bus/*.$(OBJEXT)
	-rm -f src/protocols/bus/*.lo
	-rm -f src/protocols/pair/*.$(OBJEXT)
	-rm -f src/protocols/pair/*.lo
	-rm -f src/protocols/pipeline/*.$(OBJEXT)
	-rm -f src/protocols/pipeline/*.lo
	-rm -f src/protocols/pubsub/*.$(OBJEXT)
	-rm -f src/protocols/pubsub/*.lo
	-rm -f src/protocols/reqrep/*.$(OBJEXT)
	-rm -f src/protocols/reqrep/*.lo
	-rm -f src/protocols/survey/*.$(OBJEXT)
	-rm -f src/protocols/survey/*.lo
	-rm -f src/protocols/utils/*.$(OBJEXT)
	-rm -f src/protocols/utils/*.lo
	-rm -f src/transports/inproc/*.$(OBJEXT)
	-rm -f src/transports/inproc/*.lo
	-rm -f src/transports/ipc/*.$(OBJEXT)
	-rm -f src/transports/ipc/*.lo
	-rm -f src/transports/tcp/*.$(OBJEXT)
	-rm -f src/transports/tcp/*.lo
	-rm -f src/transports/utils/*.$(OBJEXT)
	-rm -f src/transports/utils/*.lo
	-rm -f src/utils/*.$(OBJEXT)
	-rm -f src/utils/*.lo
	-rm -f tests/*.$(OBJEXT)
	-rm -f tools/*.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@perf/$(DEPDIR)/inproc_lat.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@perf/$(DEPDIR)/inproc_thr.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@perf/$(DEPDIR)/local_lat.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@perf/$(DEPDIR)/local_thr.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@perf/$(DEPDIR)/remote_lat.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@perf/$(DEPDIR)/remote_thr.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/aio/$(DEPDIR)/libnanomsg_la-ctx.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/aio/$(DEPDIR)/libnanomsg_la-fsm.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/aio/$(DEPDIR)/libnanomsg_la-poller.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/aio/$(DEPDIR)/libnanomsg_la-pool.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/aio/$(DEPDIR)/libnanomsg_la-timer.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/aio/$(DEPDIR)/libnanomsg_la-timerset.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/aio/$(DEPDIR)/libnanomsg_la-usock.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/aio/$(DEPDIR)/libnanomsg_la-worker.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/core/$(DEPDIR)/libnanomsg_la-ep.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/core/$(DEPDIR)/libnanomsg_la-epbase.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/core/$(DEPDIR)/libnanomsg_la-global.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/core/$(DEPDIR)/libnanomsg_la-pipe.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/core/$(DEPDIR)/libnanomsg_la-poll.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/core/$(DEPDIR)/libnanomsg_la-sock.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/core/$(DEPDIR)/libnanomsg_la-sockbase.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/core/$(DEPDIR)/libnanomsg_la-symbol.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/devices/$(DEPDIR)/libnanomsg_la-device.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/protocols/bus/$(DEPDIR)/libnanomsg_la-bus.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/protocols/bus/$(DEPDIR)/libnanomsg_la-xbus.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/protocols/pair/$(DEPDIR)/libnanomsg_la-pair.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/protocols/pair/$(DEPDIR)/libnanomsg_la-xpair.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/protocols/pipeline/$(DEPDIR)/libnanomsg_la-pull.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/protocols/pipeline/$(DEPDIR)/libnanomsg_la-push.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/protocols/pipeline/$(DEPDIR)/libnanomsg_la-xpull.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/protocols/pipeline/$(DEPDIR)/libnanomsg_la-xpush.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/protocols/pubsub/$(DEPDIR)/libnanomsg_la-pub.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/protocols/pubsub/$(DEPDIR)/libnanomsg_la-sub.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/protocols/pubsub/$(DEPDIR)/libnanomsg_la-trie.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/protocols/pubsub/$(DEPDIR)/libnanomsg_la-xpub.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/protocols/pubsub/$(DEPDIR)/libnanomsg_la-xsub.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/protocols/reqrep/$(DEPDIR)/libnanomsg_la-rep.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/protocols/reqrep/$(DEPDIR)/libnanomsg_la-req.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/protocols/reqrep/$(DEPDIR)/libnanomsg_la-task.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/protocols/reqrep/$(DEPDIR)/libnanomsg_la-xrep.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/protocols/reqrep/$(DEPDIR)/libnanomsg_la-xreq.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/protocols/survey/$(DEPDIR)/libnanomsg_la-respondent.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/protocols/survey/$(DEPDIR)/libnanomsg_la-surveyor.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/protocols/survey/$(DEPDIR)/libnanomsg_la-xrespondent.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/protocols/survey/$(DEPDIR)/libnanomsg_la-xsurveyor.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/protocols/utils/$(DEPDIR)/libnanomsg_la-dist.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/protocols/utils/$(DEPDIR)/libnanomsg_la-excl.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/protocols/utils/$(DEPDIR)/libnanomsg_la-fq.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/protocols/utils/$(DEPDIR)/libnanomsg_la-lb.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/protocols/utils/$(DEPDIR)/libnanomsg_la-priolist.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/transports/inproc/$(DEPDIR)/libnanomsg_la-binproc.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/transports/inproc/$(DEPDIR)/libnanomsg_la-cinproc.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/transports/inproc/$(DEPDIR)/libnanomsg_la-inproc.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/transports/inproc/$(DEPDIR)/libnanomsg_la-ins.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/transports/inproc/$(DEPDIR)/libnanomsg_la-msgqueue.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/transports/inproc/$(DEPDIR)/libnanomsg_la-sinproc.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/transports/ipc/$(DEPDIR)/libnanomsg_la-aipc.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/transports/ipc/$(DEPDIR)/libnanomsg_la-bipc.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/transports/ipc/$(DEPDIR)/libnanomsg_la-cipc.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/transports/ipc/$(DEPDIR)/libnanomsg_la-ipc.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/transports/ipc/$(DEPDIR)/libnanomsg_la-sipc.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/transports/tcp/$(DEPDIR)/libnanomsg_la-atcp.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/transports/tcp/$(DEPDIR)/libnanomsg_la-btcp.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/transports/tcp/$(DEPDIR)/libnanomsg_la-ctcp.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/transports/tcp/$(DEPDIR)/libnanomsg_la-stcp.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/transports/tcp/$(DEPDIR)/libnanomsg_la-tcp.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/transports/utils/$(DEPDIR)/libnanomsg_la-backoff.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/transports/utils/$(DEPDIR)/libnanomsg_la-dns.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/transports/utils/$(DEPDIR)/libnanomsg_la-iface.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/transports/utils/$(DEPDIR)/libnanomsg_la-literal.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/transports/utils/$(DEPDIR)/libnanomsg_la-port.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/transports/utils/$(DEPDIR)/libnanomsg_la-streamhdr.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/utils/$(DEPDIR)/libnanomsg_la-alloc.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/utils/$(DEPDIR)/libnanomsg_la-atomic.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/utils/$(DEPDIR)/libnanomsg_la-chunk.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/utils/$(DEPDIR)/libnanomsg_la-chunkref.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/utils/$(DEPDIR)/libnanomsg_la-clock.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/utils/$(DEPDIR)/libnanomsg_la-closefd.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/utils/$(DEPDIR)/libnanomsg_la-efd.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/utils/$(DEPDIR)/libnanomsg_la-err.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/utils/$(DEPDIR)/libnanomsg_la-glock.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/utils/$(DEPDIR)/libnanomsg_la-hash.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/utils/$(DEPDIR)/libnanomsg_la-list.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/utils/$(DEPDIR)/libnanomsg_la-msg.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/utils/$(DEPDIR)/libnanomsg_la-mutex.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/utils/$(DEPDIR)/libnanomsg_la-queue.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/utils/$(DEPDIR)/libnanomsg_la-random.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/utils/$(DEPDIR)/libnanomsg_la-sem.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/utils/$(DEPDIR)/libnanomsg_la-sleep.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/utils/$(DEPDIR)/libnanomsg_la-stopwatch.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/utils/$(DEPDIR)/libnanomsg_la-thread.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/utils/$(DEPDIR)/libnanomsg_la-wire.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/block.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/bus.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/cmsg.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/device.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/domain.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/emfile.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/hash.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/inproc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/inproc_shutdown.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/iovec.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/ipc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/ipc_shutdown.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/ipc_stress.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/list.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/msg.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/pair.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/pipeline.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/poll.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/prio.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/pubsub.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/reqrep.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/separation.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/shutdown.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/survey.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/symbol.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/tcp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/tcp_shutdown.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/term.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/timeo.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/trie.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/zerocopy.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@tools/$(DEPDIR)/nanocat.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@tools/$(DEPDIR)/options.Po@am__quote@

.c.o:
@am__fastdepCC_TRUE@	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ $<

.c.obj:
@am__fastdepCC_TRUE@	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
@am__fastdepCC_TRUE@	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
@am__fastdepCC_TRUE@	$(LTCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LTCOMPILE) -c -o $@ $<

src/core/libnanomsg_la-ep.lo: src/core/ep.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -MT src/core/libnanomsg_la-ep.lo -MD -MP -MF src/core/$(DEPDIR)/libnanomsg_la-ep.Tpo -c -o src/core/libnanomsg_la-ep.lo `test -f 'src/core/ep.c' || echo '$(srcdir)/'`src/core/ep.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/core/$(DEPDIR)/libnanomsg_la-ep.Tpo src/core/$(DEPDIR)/libnanomsg_la-ep.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/core/ep.c' object='src/core/libnanomsg_la-ep.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -c -o src/core/libnanomsg_la-ep.lo `test -f 'src/core/ep.c' || echo '$(srcdir)/'`src/core/ep.c

src/core/libnanomsg_la-epbase.lo: src/core/epbase.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -MT src/core/libnanomsg_la-epbase.lo -MD -MP -MF src/core/$(DEPDIR)/libnanomsg_la-epbase.Tpo -c -o src/core/libnanomsg_la-epbase.lo `test -f 'src/core/epbase.c' || echo '$(srcdir)/'`src/core/epbase.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/core/$(DEPDIR)/libnanomsg_la-epbase.Tpo src/core/$(DEPDIR)/libnanomsg_la-epbase.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/core/epbase.c' object='src/core/libnanomsg_la-epbase.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -c -o src/core/libnanomsg_la-epbase.lo `test -f 'src/core/epbase.c' || echo '$(srcdir)/'`src/core/epbase.c

src/core/libnanomsg_la-global.lo: src/core/global.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -MT src/core/libnanomsg_la-global.lo -MD -MP -MF src/core/$(DEPDIR)/libnanomsg_la-global.Tpo -c -o src/core/libnanomsg_la-global.lo `test -f 'src/core/global.c' || echo '$(srcdir)/'`src/core/global.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/core/$(DEPDIR)/libnanomsg_la-global.Tpo src/core/$(DEPDIR)/libnanomsg_la-global.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/core/global.c' object='src/core/libnanomsg_la-global.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -c -o src/core/libnanomsg_la-global.lo `test -f 'src/core/global.c' || echo '$(srcdir)/'`src/core/global.c

src/core/libnanomsg_la-pipe.lo: src/core/pipe.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -MT src/core/libnanomsg_la-pipe.lo -MD -MP -MF src/core/$(DEPDIR)/libnanomsg_la-pipe.Tpo -c -o src/core/libnanomsg_la-pipe.lo `test -f 'src/core/pipe.c' || echo '$(srcdir)/'`src/core/pipe.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/core/$(DEPDIR)/libnanomsg_la-pipe.Tpo src/core/$(DEPDIR)/libnanomsg_la-pipe.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/core/pipe.c' object='src/core/libnanomsg_la-pipe.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -c -o src/core/libnanomsg_la-pipe.lo `test -f 'src/core/pipe.c' || echo '$(srcdir)/'`src/core/pipe.c

src/core/libnanomsg_la-poll.lo: src/core/poll.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -MT src/core/libnanomsg_la-poll.lo -MD -MP -MF src/core/$(DEPDIR)/libnanomsg_la-poll.Tpo -c -o src/core/libnanomsg_la-poll.lo `test -f 'src/core/poll.c' || echo '$(srcdir)/'`src/core/poll.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/core/$(DEPDIR)/libnanomsg_la-poll.Tpo src/core/$(DEPDIR)/libnanomsg_la-poll.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/core/poll.c' object='src/core/libnanomsg_la-poll.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -c -o src/core/libnanomsg_la-poll.lo `test -f 'src/core/poll.c' || echo '$(srcdir)/'`src/core/poll.c

src/core/libnanomsg_la-sock.lo: src/core/sock.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -MT src/core/libnanomsg_la-sock.lo -MD -MP -MF src/core/$(DEPDIR)/libnanomsg_la-sock.Tpo -c -o src/core/libnanomsg_la-sock.lo `test -f 'src/core/sock.c' || echo '$(srcdir)/'`src/core/sock.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/core/$(DEPDIR)/libnanomsg_la-sock.Tpo src/core/$(DEPDIR)/libnanomsg_la-sock.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/core/sock.c' object='src/core/libnanomsg_la-sock.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -c -o src/core/libnanomsg_la-sock.lo `test -f 'src/core/sock.c' || echo '$(srcdir)/'`src/core/sock.c

src/core/libnanomsg_la-sockbase.lo: src/core/sockbase.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -MT src/core/libnanomsg_la-sockbase.lo -MD -MP -MF src/core/$(DEPDIR)/libnanomsg_la-sockbase.Tpo -c -o src/core/libnanomsg_la-sockbase.lo `test -f 'src/core/sockbase.c' || echo '$(srcdir)/'`src/core/sockbase.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/core/$(DEPDIR)/libnanomsg_la-sockbase.Tpo src/core/$(DEPDIR)/libnanomsg_la-sockbase.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/core/sockbase.c' object='src/core/libnanomsg_la-sockbase.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -c -o src/core/libnanomsg_la-sockbase.lo `test -f 'src/core/sockbase.c' || echo '$(srcdir)/'`src/core/sockbase.c

src/core/libnanomsg_la-symbol.lo: src/core/symbol.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -MT src/core/libnanomsg_la-symbol.lo -MD -MP -MF src/core/$(DEPDIR)/libnanomsg_la-symbol.Tpo -c -o src/core/libnanomsg_la-symbol.lo `test -f 'src/core/symbol.c' || echo '$(srcdir)/'`src/core/symbol.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/core/$(DEPDIR)/libnanomsg_la-symbol.Tpo src/core/$(DEPDIR)/libnanomsg_la-symbol.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/core/symbol.c' object='src/core/libnanomsg_la-symbol.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -c -o src/core/libnanomsg_la-symbol.lo `test -f 'src/core/symbol.c' || echo '$(srcdir)/'`src/core/symbol.c

src/aio/libnanomsg_la-ctx.lo: src/aio/ctx.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -MT src/aio/libnanomsg_la-ctx.lo -MD -MP -MF src/aio/$(DEPDIR)/libnanomsg_la-ctx.Tpo -c -o src/aio/libnanomsg_la-ctx.lo `test -f 'src/aio/ctx.c' || echo '$(srcdir)/'`src/aio/ctx.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/aio/$(DEPDIR)/libnanomsg_la-ctx.Tpo src/aio/$(DEPDIR)/libnanomsg_la-ctx.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/aio/ctx.c' object='src/aio/libnanomsg_la-ctx.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -c -o src/aio/libnanomsg_la-ctx.lo `test -f 'src/aio/ctx.c' || echo '$(srcdir)/'`src/aio/ctx.c

src/aio/libnanomsg_la-fsm.lo: src/aio/fsm.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -MT src/aio/libnanomsg_la-fsm.lo -MD -MP -MF src/aio/$(DEPDIR)/libnanomsg_la-fsm.Tpo -c -o src/aio/libnanomsg_la-fsm.lo `test -f 'src/aio/fsm.c' || echo '$(srcdir)/'`src/aio/fsm.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/aio/$(DEPDIR)/libnanomsg_la-fsm.Tpo src/aio/$(DEPDIR)/libnanomsg_la-fsm.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/aio/fsm.c' object='src/aio/libnanomsg_la-fsm.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -c -o src/aio/libnanomsg_la-fsm.lo `test -f 'src/aio/fsm.c' || echo '$(srcdir)/'`src/aio/fsm.c

src/aio/libnanomsg_la-poller.lo: src/aio/poller.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -MT src/aio/libnanomsg_la-poller.lo -MD -MP -MF src/aio/$(DEPDIR)/libnanomsg_la-poller.Tpo -c -o src/aio/libnanomsg_la-poller.lo `test -f 'src/aio/poller.c' || echo '$(srcdir)/'`src/aio/poller.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/aio/$(DEPDIR)/libnanomsg_la-poller.Tpo src/aio/$(DEPDIR)/libnanomsg_la-poller.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/aio/poller.c' object='src/aio/libnanomsg_la-poller.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -c -o src/aio/libnanomsg_la-poller.lo `test -f 'src/aio/poller.c' || echo '$(srcdir)/'`src/aio/poller.c

src/aio/libnanomsg_la-pool.lo: src/aio/pool.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -MT src/aio/libnanomsg_la-pool.lo -MD -MP -MF src/aio/$(DEPDIR)/libnanomsg_la-pool.Tpo -c -o src/aio/libnanomsg_la-pool.lo `test -f 'src/aio/pool.c' || echo '$(srcdir)/'`src/aio/pool.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/aio/$(DEPDIR)/libnanomsg_la-pool.Tpo src/aio/$(DEPDIR)/libnanomsg_la-pool.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/aio/pool.c' object='src/aio/libnanomsg_la-pool.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -c -o src/aio/libnanomsg_la-pool.lo `test -f 'src/aio/pool.c' || echo '$(srcdir)/'`src/aio/pool.c

src/aio/libnanomsg_la-timer.lo: src/aio/timer.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -MT src/aio/libnanomsg_la-timer.lo -MD -MP -MF src/aio/$(DEPDIR)/libnanomsg_la-timer.Tpo -c -o src/aio/libnanomsg_la-timer.lo `test -f 'src/aio/timer.c' || echo '$(srcdir)/'`src/aio/timer.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/aio/$(DEPDIR)/libnanomsg_la-timer.Tpo src/aio/$(DEPDIR)/libnanomsg_la-timer.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/aio/timer.c' object='src/aio/libnanomsg_la-timer.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -c -o src/aio/libnanomsg_la-timer.lo `test -f 'src/aio/timer.c' || echo '$(srcdir)/'`src/aio/timer.c

src/aio/libnanomsg_la-timerset.lo: src/aio/timerset.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -MT src/aio/libnanomsg_la-timerset.lo -MD -MP -MF src/aio/$(DEPDIR)/libnanomsg_la-timerset.Tpo -c -o src/aio/libnanomsg_la-timerset.lo `test -f 'src/aio/timerset.c' || echo '$(srcdir)/'`src/aio/timerset.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/aio/$(DEPDIR)/libnanomsg_la-timerset.Tpo src/aio/$(DEPDIR)/libnanomsg_la-timerset.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/aio/timerset.c' object='src/aio/libnanomsg_la-timerset.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -c -o src/aio/libnanomsg_la-timerset.lo `test -f 'src/aio/timerset.c' || echo '$(srcdir)/'`src/aio/timerset.c

src/aio/libnanomsg_la-usock.lo: src/aio/usock.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -MT src/aio/libnanomsg_la-usock.lo -MD -MP -MF src/aio/$(DEPDIR)/libnanomsg_la-usock.Tpo -c -o src/aio/libnanomsg_la-usock.lo `test -f 'src/aio/usock.c' || echo '$(srcdir)/'`src/aio/usock.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/aio/$(DEPDIR)/libnanomsg_la-usock.Tpo src/aio/$(DEPDIR)/libnanomsg_la-usock.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/aio/usock.c' object='src/aio/libnanomsg_la-usock.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -c -o src/aio/libnanomsg_la-usock.lo `test -f 'src/aio/usock.c' || echo '$(srcdir)/'`src/aio/usock.c

src/aio/libnanomsg_la-worker.lo: src/aio/worker.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -MT src/aio/libnanomsg_la-worker.lo -MD -MP -MF src/aio/$(DEPDIR)/libnanomsg_la-worker.Tpo -c -o src/aio/libnanomsg_la-worker.lo `test -f 'src/aio/worker.c' || echo '$(srcdir)/'`src/aio/worker.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/aio/$(DEPDIR)/libnanomsg_la-worker.Tpo src/aio/$(DEPDIR)/libnanomsg_la-worker.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/aio/worker.c' object='src/aio/libnanomsg_la-worker.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -c -o src/aio/libnanomsg_la-worker.lo `test -f 'src/aio/worker.c' || echo '$(srcdir)/'`src/aio/worker.c

src/utils/libnanomsg_la-alloc.lo: src/utils/alloc.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -MT src/utils/libnanomsg_la-alloc.lo -MD -MP -MF src/utils/$(DEPDIR)/libnanomsg_la-alloc.Tpo -c -o src/utils/libnanomsg_la-alloc.lo `test -f 'src/utils/alloc.c' || echo '$(srcdir)/'`src/utils/alloc.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/utils/$(DEPDIR)/libnanomsg_la-alloc.Tpo src/utils/$(DEPDIR)/libnanomsg_la-alloc.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/utils/alloc.c' object='src/utils/libnanomsg_la-alloc.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -c -o src/utils/libnanomsg_la-alloc.lo `test -f 'src/utils/alloc.c' || echo '$(srcdir)/'`src/utils/alloc.c

src/utils/libnanomsg_la-atomic.lo: src/utils/atomic.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -MT src/utils/libnanomsg_la-atomic.lo -MD -MP -MF src/utils/$(DEPDIR)/libnanomsg_la-atomic.Tpo -c -o src/utils/libnanomsg_la-atomic.lo `test -f 'src/utils/atomic.c' || echo '$(srcdir)/'`src/utils/atomic.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/utils/$(DEPDIR)/libnanomsg_la-atomic.Tpo src/utils/$(DEPDIR)/libnanomsg_la-atomic.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/utils/atomic.c' object='src/utils/libnanomsg_la-atomic.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -c -o src/utils/libnanomsg_la-atomic.lo `test -f 'src/utils/atomic.c' || echo '$(srcdir)/'`src/utils/atomic.c

src/utils/libnanomsg_la-chunk.lo: src/utils/chunk.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -MT src/utils/libnanomsg_la-chunk.lo -MD -MP -MF src/utils/$(DEPDIR)/libnanomsg_la-chunk.Tpo -c -o src/utils/libnanomsg_la-chunk.lo `test -f 'src/utils/chunk.c' || echo '$(srcdir)/'`src/utils/chunk.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/utils/$(DEPDIR)/libnanomsg_la-chunk.Tpo src/utils/$(DEPDIR)/libnanomsg_la-chunk.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/utils/chunk.c' object='src/utils/libnanomsg_la-chunk.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -c -o src/utils/libnanomsg_la-chunk.lo `test -f 'src/utils/chunk.c' || echo '$(srcdir)/'`src/utils/chunk.c

src/utils/libnanomsg_la-chunkref.lo: src/utils/chunkref.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -MT src/utils/libnanomsg_la-chunkref.lo -MD -MP -MF src/utils/$(DEPDIR)/libnanomsg_la-chunkref.Tpo -c -o src/utils/libnanomsg_la-chunkref.lo `test -f 'src/utils/chunkref.c' || echo '$(srcdir)/'`src/utils/chunkref.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/utils/$(DEPDIR)/libnanomsg_la-chunkref.Tpo src/utils/$(DEPDIR)/libnanomsg_la-chunkref.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/utils/chunkref.c' object='src/utils/libnanomsg_la-chunkref.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -c -o src/utils/libnanomsg_la-chunkref.lo `test -f 'src/utils/chunkref.c' || echo '$(srcdir)/'`src/utils/chunkref.c

src/utils/libnanomsg_la-clock.lo: src/utils/clock.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -MT src/utils/libnanomsg_la-clock.lo -MD -MP -MF src/utils/$(DEPDIR)/libnanomsg_la-clock.Tpo -c -o src/utils/libnanomsg_la-clock.lo `test -f 'src/utils/clock.c' || echo '$(srcdir)/'`src/utils/clock.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/utils/$(DEPDIR)/libnanomsg_la-clock.Tpo src/utils/$(DEPDIR)/libnanomsg_la-clock.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/utils/clock.c' object='src/utils/libnanomsg_la-clock.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -c -o src/utils/libnanomsg_la-clock.lo `test -f 'src/utils/clock.c' || echo '$(srcdir)/'`src/utils/clock.c

src/utils/libnanomsg_la-closefd.lo: src/utils/closefd.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -MT src/utils/libnanomsg_la-closefd.lo -MD -MP -MF src/utils/$(DEPDIR)/libnanomsg_la-closefd.Tpo -c -o src/utils/libnanomsg_la-closefd.lo `test -f 'src/utils/closefd.c' || echo '$(srcdir)/'`src/utils/closefd.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/utils/$(DEPDIR)/libnanomsg_la-closefd.Tpo src/utils/$(DEPDIR)/libnanomsg_la-closefd.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/utils/closefd.c' object='src/utils/libnanomsg_la-closefd.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -c -o src/utils/libnanomsg_la-closefd.lo `test -f 'src/utils/closefd.c' || echo '$(srcdir)/'`src/utils/closefd.c

src/utils/libnanomsg_la-efd.lo: src/utils/efd.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -MT src/utils/libnanomsg_la-efd.lo -MD -MP -MF src/utils/$(DEPDIR)/libnanomsg_la-efd.Tpo -c -o src/utils/libnanomsg_la-efd.lo `test -f 'src/utils/efd.c' || echo '$(srcdir)/'`src/utils/efd.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/utils/$(DEPDIR)/libnanomsg_la-efd.Tpo src/utils/$(DEPDIR)/libnanomsg_la-efd.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/utils/efd.c' object='src/utils/libnanomsg_la-efd.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -c -o src/utils/libnanomsg_la-efd.lo `test -f 'src/utils/efd.c' || echo '$(srcdir)/'`src/utils/efd.c

src/utils/libnanomsg_la-err.lo: src/utils/err.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -MT src/utils/libnanomsg_la-err.lo -MD -MP -MF src/utils/$(DEPDIR)/libnanomsg_la-err.Tpo -c -o src/utils/libnanomsg_la-err.lo `test -f 'src/utils/err.c' || echo '$(srcdir)/'`src/utils/err.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/utils/$(DEPDIR)/libnanomsg_la-err.Tpo src/utils/$(DEPDIR)/libnanomsg_la-err.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/utils/err.c' object='src/utils/libnanomsg_la-err.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -c -o src/utils/libnanomsg_la-err.lo `test -f 'src/utils/err.c' || echo '$(srcdir)/'`src/utils/err.c

src/utils/libnanomsg_la-glock.lo: src/utils/glock.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -MT src/utils/libnanomsg_la-glock.lo -MD -MP -MF src/utils/$(DEPDIR)/libnanomsg_la-glock.Tpo -c -o src/utils/libnanomsg_la-glock.lo `test -f 'src/utils/glock.c' || echo '$(srcdir)/'`src/utils/glock.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/utils/$(DEPDIR)/libnanomsg_la-glock.Tpo src/utils/$(DEPDIR)/libnanomsg_la-glock.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/utils/glock.c' object='src/utils/libnanomsg_la-glock.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -c -o src/utils/libnanomsg_la-glock.lo `test -f 'src/utils/glock.c' || echo '$(srcdir)/'`src/utils/glock.c

src/utils/libnanomsg_la-hash.lo: src/utils/hash.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -MT src/utils/libnanomsg_la-hash.lo -MD -MP -MF src/utils/$(DEPDIR)/libnanomsg_la-hash.Tpo -c -o src/utils/libnanomsg_la-hash.lo `test -f 'src/utils/hash.c' || echo '$(srcdir)/'`src/utils/hash.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/utils/$(DEPDIR)/libnanomsg_la-hash.Tpo src/utils/$(DEPDIR)/libnanomsg_la-hash.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/utils/hash.c' object='src/utils/libnanomsg_la-hash.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -c -o src/utils/libnanomsg_la-hash.lo `test -f 'src/utils/hash.c' || echo '$(srcdir)/'`src/utils/hash.c

src/utils/libnanomsg_la-list.lo: src/utils/list.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -MT src/utils/libnanomsg_la-list.lo -MD -MP -MF src/utils/$(DEPDIR)/libnanomsg_la-list.Tpo -c -o src/utils/libnanomsg_la-list.lo `test -f 'src/utils/list.c' || echo '$(srcdir)/'`src/utils/list.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/utils/$(DEPDIR)/libnanomsg_la-list.Tpo src/utils/$(DEPDIR)/libnanomsg_la-list.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/utils/list.c' object='src/utils/libnanomsg_la-list.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -c -o src/utils/libnanomsg_la-list.lo `test -f 'src/utils/list.c' || echo '$(srcdir)/'`src/utils/list.c

src/utils/libnanomsg_la-msg.lo: src/utils/msg.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -MT src/utils/libnanomsg_la-msg.lo -MD -MP -MF src/utils/$(DEPDIR)/libnanomsg_la-msg.Tpo -c -o src/utils/libnanomsg_la-msg.lo `test -f 'src/utils/msg.c' || echo '$(srcdir)/'`src/utils/msg.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/utils/$(DEPDIR)/libnanomsg_la-msg.Tpo src/utils/$(DEPDIR)/libnanomsg_la-msg.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/utils/msg.c' object='src/utils/libnanomsg_la-msg.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -c -o src/utils/libnanomsg_la-msg.lo `test -f 'src/utils/msg.c' || echo '$(srcdir)/'`src/utils/msg.c

src/utils/libnanomsg_la-mutex.lo: src/utils/mutex.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -MT src/utils/libnanomsg_la-mutex.lo -MD -MP -MF src/utils/$(DEPDIR)/libnanomsg_la-mutex.Tpo -c -o src/utils/libnanomsg_la-mutex.lo `test -f 'src/utils/mutex.c' || echo '$(srcdir)/'`src/utils/mutex.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/utils/$(DEPDIR)/libnanomsg_la-mutex.Tpo src/utils/$(DEPDIR)/libnanomsg_la-mutex.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/utils/mutex.c' object='src/utils/libnanomsg_la-mutex.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -c -o src/utils/libnanomsg_la-mutex.lo `test -f 'src/utils/mutex.c' || echo '$(srcdir)/'`src/utils/mutex.c

src/utils/libnanomsg_la-queue.lo: src/utils/queue.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -MT src/utils/libnanomsg_la-queue.lo -MD -MP -MF src/utils/$(DEPDIR)/libnanomsg_la-queue.Tpo -c -o src/utils/libnanomsg_la-queue.lo `test -f 'src/utils/queue.c' || echo '$(srcdir)/'`src/utils/queue.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/utils/$(DEPDIR)/libnanomsg_la-queue.Tpo src/utils/$(DEPDIR)/libnanomsg_la-queue.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/utils/queue.c' object='src/utils/libnanomsg_la-queue.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -c -o src/utils/libnanomsg_la-queue.lo `test -f 'src/utils/queue.c' || echo '$(srcdir)/'`src/utils/queue.c

src/utils/libnanomsg_la-random.lo: src/utils/random.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -MT src/utils/libnanomsg_la-random.lo -MD -MP -MF src/utils/$(DEPDIR)/libnanomsg_la-random.Tpo -c -o src/utils/libnanomsg_la-random.lo `test -f 'src/utils/random.c' || echo '$(srcdir)/'`src/utils/random.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/utils/$(DEPDIR)/libnanomsg_la-random.Tpo src/utils/$(DEPDIR)/libnanomsg_la-random.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/utils/random.c' object='src/utils/libnanomsg_la-random.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -c -o src/utils/libnanomsg_la-random.lo `test -f 'src/utils/random.c' || echo '$(srcdir)/'`src/utils/random.c

src/utils/libnanomsg_la-sem.lo: src/utils/sem.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -MT src/utils/libnanomsg_la-sem.lo -MD -MP -MF src/utils/$(DEPDIR)/libnanomsg_la-sem.Tpo -c -o src/utils/libnanomsg_la-sem.lo `test -f 'src/utils/sem.c' || echo '$(srcdir)/'`src/utils/sem.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/utils/$(DEPDIR)/libnanomsg_la-sem.Tpo src/utils/$(DEPDIR)/libnanomsg_la-sem.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/utils/sem.c' object='src/utils/libnanomsg_la-sem.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -c -o src/utils/libnanomsg_la-sem.lo `test -f 'src/utils/sem.c' || echo '$(srcdir)/'`src/utils/sem.c

src/utils/libnanomsg_la-sleep.lo: src/utils/sleep.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -MT src/utils/libnanomsg_la-sleep.lo -MD -MP -MF src/utils/$(DEPDIR)/libnanomsg_la-sleep.Tpo -c -o src/utils/libnanomsg_la-sleep.lo `test -f 'src/utils/sleep.c' || echo '$(srcdir)/'`src/utils/sleep.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/utils/$(DEPDIR)/libnanomsg_la-sleep.Tpo src/utils/$(DEPDIR)/libnanomsg_la-sleep.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/utils/sleep.c' object='src/utils/libnanomsg_la-sleep.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -c -o src/utils/libnanomsg_la-sleep.lo `test -f 'src/utils/sleep.c' || echo '$(srcdir)/'`src/utils/sleep.c

src/utils/libnanomsg_la-stopwatch.lo: src/utils/stopwatch.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -MT src/utils/libnanomsg_la-stopwatch.lo -MD -MP -MF src/utils/$(DEPDIR)/libnanomsg_la-stopwatch.Tpo -c -o src/utils/libnanomsg_la-stopwatch.lo `test -f 'src/utils/stopwatch.c' || echo '$(srcdir)/'`src/utils/stopwatch.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/utils/$(DEPDIR)/libnanomsg_la-stopwatch.Tpo src/utils/$(DEPDIR)/libnanomsg_la-stopwatch.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/utils/stopwatch.c' object='src/utils/libnanomsg_la-stopwatch.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -c -o src/utils/libnanomsg_la-stopwatch.lo `test -f 'src/utils/stopwatch.c' || echo '$(srcdir)/'`src/utils/stopwatch.c

src/utils/libnanomsg_la-thread.lo: src/utils/thread.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -MT src/utils/libnanomsg_la-thread.lo -MD -MP -MF src/utils/$(DEPDIR)/libnanomsg_la-thread.Tpo -c -o src/utils/libnanomsg_la-thread.lo `test -f 'src/utils/thread.c' || echo '$(srcdir)/'`src/utils/thread.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/utils/$(DEPDIR)/libnanomsg_la-thread.Tpo src/utils/$(DEPDIR)/libnanomsg_la-thread.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/utils/thread.c' object='src/utils/libnanomsg_la-thread.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -c -o src/utils/libnanomsg_la-thread.lo `test -f 'src/utils/thread.c' || echo '$(srcdir)/'`src/utils/thread.c

src/utils/libnanomsg_la-wire.lo: src/utils/wire.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -MT src/utils/libnanomsg_la-wire.lo -MD -MP -MF src/utils/$(DEPDIR)/libnanomsg_la-wire.Tpo -c -o src/utils/libnanomsg_la-wire.lo `test -f 'src/utils/wire.c' || echo '$(srcdir)/'`src/utils/wire.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/utils/$(DEPDIR)/libnanomsg_la-wire.Tpo src/utils/$(DEPDIR)/libnanomsg_la-wire.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/utils/wire.c' object='src/utils/libnanomsg_la-wire.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -c -o src/utils/libnanomsg_la-wire.lo `test -f 'src/utils/wire.c' || echo '$(srcdir)/'`src/utils/wire.c

src/protocols/bus/libnanomsg_la-bus.lo: src/protocols/bus/bus.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -MT src/protocols/bus/libnanomsg_la-bus.lo -MD -MP -MF src/protocols/bus/$(DEPDIR)/libnanomsg_la-bus.Tpo -c -o src/protocols/bus/libnanomsg_la-bus.lo `test -f 'src/protocols/bus/bus.c' || echo '$(srcdir)/'`src/protocols/bus/bus.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/protocols/bus/$(DEPDIR)/libnanomsg_la-bus.Tpo src/protocols/bus/$(DEPDIR)/libnanomsg_la-bus.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/protocols/bus/bus.c' object='src/protocols/bus/libnanomsg_la-bus.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -c -o src/protocols/bus/libnanomsg_la-bus.lo `test -f 'src/protocols/bus/bus.c' || echo '$(srcdir)/'`src/protocols/bus/bus.c

src/protocols/bus/libnanomsg_la-xbus.lo: src/protocols/bus/xbus.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -MT src/protocols/bus/libnanomsg_la-xbus.lo -MD -MP -MF src/protocols/bus/$(DEPDIR)/libnanomsg_la-xbus.Tpo -c -o src/protocols/bus/libnanomsg_la-xbus.lo `test -f 'src/protocols/bus/xbus.c' || echo '$(srcdir)/'`src/protocols/bus/xbus.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/protocols/bus/$(DEPDIR)/libnanomsg_la-xbus.Tpo src/protocols/bus/$(DEPDIR)/libnanomsg_la-xbus.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/protocols/bus/xbus.c' object='src/protocols/bus/libnanomsg_la-xbus.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -c -o src/protocols/bus/libnanomsg_la-xbus.lo `test -f 'src/protocols/bus/xbus.c' || echo '$(srcdir)/'`src/protocols/bus/xbus.c

src/protocols/pipeline/libnanomsg_la-push.lo: src/protocols/pipeline/push.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -MT src/protocols/pipeline/libnanomsg_la-push.lo -MD -MP -MF src/protocols/pipeline/$(DEPDIR)/libnanomsg_la-push.Tpo -c -o src/protocols/pipeline/libnanomsg_la-push.lo `test -f 'src/protocols/pipeline/push.c' || echo '$(srcdir)/'`src/protocols/pipeline/push.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/protocols/pipeline/$(DEPDIR)/libnanomsg_la-push.Tpo src/protocols/pipeline/$(DEPDIR)/libnanomsg_la-push.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/protocols/pipeline/push.c' object='src/protocols/pipeline/libnanomsg_la-push.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -c -o src/protocols/pipeline/libnanomsg_la-push.lo `test -f 'src/protocols/pipeline/push.c' || echo '$(srcdir)/'`src/protocols/pipeline/push.c

src/protocols/pipeline/libnanomsg_la-pull.lo: src/protocols/pipeline/pull.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -MT src/protocols/pipeline/libnanomsg_la-pull.lo -MD -MP -MF src/protocols/pipeline/$(DEPDIR)/libnanomsg_la-pull.Tpo -c -o src/protocols/pipeline/libnanomsg_la-pull.lo `test -f 'src/protocols/pipeline/pull.c' || echo '$(srcdir)/'`src/protocols/pipeline/pull.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/protocols/pipeline/$(DEPDIR)/libnanomsg_la-pull.Tpo src/protocols/pipeline/$(DEPDIR)/libnanomsg_la-pull.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/protocols/pipeline/pull.c' object='src/protocols/pipeline/libnanomsg_la-pull.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -c -o src/protocols/pipeline/libnanomsg_la-pull.lo `test -f 'src/protocols/pipeline/pull.c' || echo '$(srcdir)/'`src/protocols/pipeline/pull.c

src/protocols/pipeline/libnanomsg_la-xpull.lo: src/protocols/pipeline/xpull.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -MT src/protocols/pipeline/libnanomsg_la-xpull.lo -MD -MP -MF src/protocols/pipeline/$(DEPDIR)/libnanomsg_la-xpull.Tpo -c -o src/protocols/pipeline/libnanomsg_la-xpull.lo `test -f 'src/protocols/pipeline/xpull.c' || echo '$(srcdir)/'`src/protocols/pipeline/xpull.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/protocols/pipeline/$(DEPDIR)/libnanomsg_la-xpull.Tpo src/protocols/pipeline/$(DEPDIR)/libnanomsg_la-xpull.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/protocols/pipeline/xpull.c' object='src/protocols/pipeline/libnanomsg_la-xpull.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -c -o src/protocols/pipeline/libnanomsg_la-xpull.lo `test -f 'src/protocols/pipeline/xpull.c' || echo '$(srcdir)/'`src/protocols/pipeline/xpull.c

src/protocols/pipeline/libnanomsg_la-xpush.lo: src/protocols/pipeline/xpush.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -MT src/protocols/pipeline/libnanomsg_la-xpush.lo -MD -MP -MF src/protocols/pipeline/$(DEPDIR)/libnanomsg_la-xpush.Tpo -c -o src/protocols/pipeline/libnanomsg_la-xpush.lo `test -f 'src/protocols/pipeline/xpush.c' || echo '$(srcdir)/'`src/protocols/pipeline/xpush.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/protocols/pipeline/$(DEPDIR)/libnanomsg_la-xpush.Tpo src/protocols/pipeline/$(DEPDIR)/libnanomsg_la-xpush.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/protocols/pipeline/xpush.c' object='src/protocols/pipeline/libnanomsg_la-xpush.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -c -o src/protocols/pipeline/libnanomsg_la-xpush.lo `test -f 'src/protocols/pipeline/xpush.c' || echo '$(srcdir)/'`src/protocols/pipeline/xpush.c

src/protocols/pair/libnanomsg_la-pair.lo: src/protocols/pair/pair.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -MT src/protocols/pair/libnanomsg_la-pair.lo -MD -MP -MF src/protocols/pair/$(DEPDIR)/libnanomsg_la-pair.Tpo -c -o src/protocols/pair/libnanomsg_la-pair.lo `test -f 'src/protocols/pair/pair.c' || echo '$(srcdir)/'`src/protocols/pair/pair.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/protocols/pair/$(DEPDIR)/libnanomsg_la-pair.Tpo src/protocols/pair/$(DEPDIR)/libnanomsg_la-pair.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/protocols/pair/pair.c' object='src/protocols/pair/libnanomsg_la-pair.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -c -o src/protocols/pair/libnanomsg_la-pair.lo `test -f 'src/protocols/pair/pair.c' || echo '$(srcdir)/'`src/protocols/pair/pair.c

src/protocols/pair/libnanomsg_la-xpair.lo: src/protocols/pair/xpair.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -MT src/protocols/pair/libnanomsg_la-xpair.lo -MD -MP -MF src/protocols/pair/$(DEPDIR)/libnanomsg_la-xpair.Tpo -c -o src/protocols/pair/libnanomsg_la-xpair.lo `test -f 'src/protocols/pair/xpair.c' || echo '$(srcdir)/'`src/protocols/pair/xpair.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/protocols/pair/$(DEPDIR)/libnanomsg_la-xpair.Tpo src/protocols/pair/$(DEPDIR)/libnanomsg_la-xpair.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/protocols/pair/xpair.c' object='src/protocols/pair/libnanomsg_la-xpair.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -c -o src/protocols/pair/libnanomsg_la-xpair.lo `test -f 'src/protocols/pair/xpair.c' || echo '$(srcdir)/'`src/protocols/pair/xpair.c

src/protocols/pubsub/libnanomsg_la-pub.lo: src/protocols/pubsub/pub.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -MT src/protocols/pubsub/libnanomsg_la-pub.lo -MD -MP -MF src/protocols/pubsub/$(DEPDIR)/libnanomsg_la-pub.Tpo -c -o src/protocols/pubsub/libnanomsg_la-pub.lo `test -f 'src/protocols/pubsub/pub.c' || echo '$(srcdir)/'`src/protocols/pubsub/pub.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/protocols/pubsub/$(DEPDIR)/libnanomsg_la-pub.Tpo src/protocols/pubsub/$(DEPDIR)/libnanomsg_la-pub.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/protocols/pubsub/pub.c' object='src/protocols/pubsub/libnanomsg_la-pub.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -c -o src/protocols/pubsub/libnanomsg_la-pub.lo `test -f 'src/protocols/pubsub/pub.c' || echo '$(srcdir)/'`src/protocols/pubsub/pub.c

src/protocols/pubsub/libnanomsg_la-sub.lo: src/protocols/pubsub/sub.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -MT src/protocols/pubsub/libnanomsg_la-sub.lo -MD -MP -MF src/protocols/pubsub/$(DEPDIR)/libnanomsg_la-sub.Tpo -c -o src/protocols/pubsub/libnanomsg_la-sub.lo `test -f 'src/protocols/pubsub/sub.c' || echo '$(srcdir)/'`src/protocols/pubsub/sub.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/protocols/pubsub/$(DEPDIR)/libnanomsg_la-sub.Tpo src/protocols/pubsub/$(DEPDIR)/libnanomsg_la-sub.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/protocols/pubsub/sub.c' object='src/protocols/pubsub/libnanomsg_la-sub.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -c -o src/protocols/pubsub/libnanomsg_la-sub.lo `test -f 'src/protocols/pubsub/sub.c' || echo '$(srcdir)/'`src/protocols/pubsub/sub.c

src/protocols/pubsub/libnanomsg_la-trie.lo: src/protocols/pubsub/trie.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -MT src/protocols/pubsub/libnanomsg_la-trie.lo -MD -MP -MF src/protocols/pubsub/$(DEPDIR)/libnanomsg_la-trie.Tpo -c -o src/protocols/pubsub/libnanomsg_la-trie.lo `test -f 'src/protocols/pubsub/trie.c' || echo '$(srcdir)/'`src/protocols/pubsub/trie.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/protocols/pubsub/$(DEPDIR)/libnanomsg_la-trie.Tpo src/protocols/pubsub/$(DEPDIR)/libnanomsg_la-trie.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/protocols/pubsub/trie.c' object='src/protocols/pubsub/libnanomsg_la-trie.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -c -o src/protocols/pubsub/libnanomsg_la-trie.lo `test -f 'src/protocols/pubsub/trie.c' || echo '$(srcdir)/'`src/protocols/pubsub/trie.c

src/protocols/pubsub/libnanomsg_la-xpub.lo: src/protocols/pubsub/xpub.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -MT src/protocols/pubsub/libnanomsg_la-xpub.lo -MD -MP -MF src/protocols/pubsub/$(DEPDIR)/libnanomsg_la-xpub.Tpo -c -o src/protocols/pubsub/libnanomsg_la-xpub.lo `test -f 'src/protocols/pubsub/xpub.c' || echo '$(srcdir)/'`src/protocols/pubsub/xpub.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/protocols/pubsub/$(DEPDIR)/libnanomsg_la-xpub.Tpo src/protocols/pubsub/$(DEPDIR)/libnanomsg_la-xpub.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/protocols/pubsub/xpub.c' object='src/protocols/pubsub/libnanomsg_la-xpub.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -c -o src/protocols/pubsub/libnanomsg_la-xpub.lo `test -f 'src/protocols/pubsub/xpub.c' || echo '$(srcdir)/'`src/protocols/pubsub/xpub.c

src/protocols/pubsub/libnanomsg_la-xsub.lo: src/protocols/pubsub/xsub.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -MT src/protocols/pubsub/libnanomsg_la-xsub.lo -MD -MP -MF src/protocols/pubsub/$(DEPDIR)/libnanomsg_la-xsub.Tpo -c -o src/protocols/pubsub/libnanomsg_la-xsub.lo `test -f 'src/protocols/pubsub/xsub.c' || echo '$(srcdir)/'`src/protocols/pubsub/xsub.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/protocols/pubsub/$(DEPDIR)/libnanomsg_la-xsub.Tpo src/protocols/pubsub/$(DEPDIR)/libnanomsg_la-xsub.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/protocols/pubsub/xsub.c' object='src/protocols/pubsub/libnanomsg_la-xsub.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -c -o src/protocols/pubsub/libnanomsg_la-xsub.lo `test -f 'src/protocols/pubsub/xsub.c' || echo '$(srcdir)/'`src/protocols/pubsub/xsub.c

src/protocols/reqrep/libnanomsg_la-req.lo: src/protocols/reqrep/req.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -MT src/protocols/reqrep/libnanomsg_la-req.lo -MD -MP -MF src/protocols/reqrep/$(DEPDIR)/libnanomsg_la-req.Tpo -c -o src/protocols/reqrep/libnanomsg_la-req.lo `test -f 'src/protocols/reqrep/req.c' || echo '$(srcdir)/'`src/protocols/reqrep/req.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/protocols/reqrep/$(DEPDIR)/libnanomsg_la-req.Tpo src/protocols/reqrep/$(DEPDIR)/libnanomsg_la-req.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/protocols/reqrep/req.c' object='src/protocols/reqrep/libnanomsg_la-req.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -c -o src/protocols/reqrep/libnanomsg_la-req.lo `test -f 'src/protocols/reqrep/req.c' || echo '$(srcdir)/'`src/protocols/reqrep/req.c

src/protocols/reqrep/libnanomsg_la-rep.lo: src/protocols/reqrep/rep.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -MT src/protocols/reqrep/libnanomsg_la-rep.lo -MD -MP -MF src/protocols/reqrep/$(DEPDIR)/libnanomsg_la-rep.Tpo -c -o src/protocols/reqrep/libnanomsg_la-rep.lo `test -f 'src/protocols/reqrep/rep.c' || echo '$(srcdir)/'`src/protocols/reqrep/rep.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/protocols/reqrep/$(DEPDIR)/libnanomsg_la-rep.Tpo src/protocols/reqrep/$(DEPDIR)/libnanomsg_la-rep.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/protocols/reqrep/rep.c' object='src/protocols/reqrep/libnanomsg_la-rep.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -c -o src/protocols/reqrep/libnanomsg_la-rep.lo `test -f 'src/protocols/reqrep/rep.c' || echo '$(srcdir)/'`src/protocols/reqrep/rep.c

src/protocols/reqrep/libnanomsg_la-task.lo: src/protocols/reqrep/task.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -MT src/protocols/reqrep/libnanomsg_la-task.lo -MD -MP -MF src/protocols/reqrep/$(DEPDIR)/libnanomsg_la-task.Tpo -c -o src/protocols/reqrep/libnanomsg_la-task.lo `test -f 'src/protocols/reqrep/task.c' || echo '$(srcdir)/'`src/protocols/reqrep/task.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/protocols/reqrep/$(DEPDIR)/libnanomsg_la-task.Tpo src/protocols/reqrep/$(DEPDIR)/libnanomsg_la-task.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/protocols/reqrep/task.c' object='src/protocols/reqrep/libnanomsg_la-task.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -c -o src/protocols/reqrep/libnanomsg_la-task.lo `test -f 'src/protocols/reqrep/task.c' || echo '$(srcdir)/'`src/protocols/reqrep/task.c

src/protocols/reqrep/libnanomsg_la-xrep.lo: src/protocols/reqrep/xrep.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -MT src/protocols/reqrep/libnanomsg_la-xrep.lo -MD -MP -MF src/protocols/reqrep/$(DEPDIR)/libnanomsg_la-xrep.Tpo -c -o src/protocols/reqrep/libnanomsg_la-xrep.lo `test -f 'src/protocols/reqrep/xrep.c' || echo '$(srcdir)/'`src/protocols/reqrep/xrep.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/protocols/reqrep/$(DEPDIR)/libnanomsg_la-xrep.Tpo src/protocols/reqrep/$(DEPDIR)/libnanomsg_la-xrep.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/protocols/reqrep/xrep.c' object='src/protocols/reqrep/libnanomsg_la-xrep.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -c -o src/protocols/reqrep/libnanomsg_la-xrep.lo `test -f 'src/protocols/reqrep/xrep.c' || echo '$(srcdir)/'`src/protocols/reqrep/xrep.c

src/protocols/reqrep/libnanomsg_la-xreq.lo: src/protocols/reqrep/xreq.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -MT src/protocols/reqrep/libnanomsg_la-xreq.lo -MD -MP -MF src/protocols/reqrep/$(DEPDIR)/libnanomsg_la-xreq.Tpo -c -o src/protocols/reqrep/libnanomsg_la-xreq.lo `test -f 'src/protocols/reqrep/xreq.c' || echo '$(srcdir)/'`src/protocols/reqrep/xreq.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/protocols/reqrep/$(DEPDIR)/libnanomsg_la-xreq.Tpo src/protocols/reqrep/$(DEPDIR)/libnanomsg_la-xreq.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/protocols/reqrep/xreq.c' object='src/protocols/reqrep/libnanomsg_la-xreq.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -c -o src/protocols/reqrep/libnanomsg_la-xreq.lo `test -f 'src/protocols/reqrep/xreq.c' || echo '$(srcdir)/'`src/protocols/reqrep/xreq.c

src/protocols/survey/libnanomsg_la-respondent.lo: src/protocols/survey/respondent.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -MT src/protocols/survey/libnanomsg_la-respondent.lo -MD -MP -MF src/protocols/survey/$(DEPDIR)/libnanomsg_la-respondent.Tpo -c -o src/protocols/survey/libnanomsg_la-respondent.lo `test -f 'src/protocols/survey/respondent.c' || echo '$(srcdir)/'`src/protocols/survey/respondent.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/protocols/survey/$(DEPDIR)/libnanomsg_la-respondent.Tpo src/protocols/survey/$(DEPDIR)/libnanomsg_la-respondent.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/protocols/survey/respondent.c' object='src/protocols/survey/libnanomsg_la-respondent.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -c -o src/protocols/survey/libnanomsg_la-respondent.lo `test -f 'src/protocols/survey/respondent.c' || echo '$(srcdir)/'`src/protocols/survey/respondent.c

src/protocols/survey/libnanomsg_la-surveyor.lo: src/protocols/survey/surveyor.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -MT src/protocols/survey/libnanomsg_la-surveyor.lo -MD -MP -MF src/protocols/survey/$(DEPDIR)/libnanomsg_la-surveyor.Tpo -c -o src/protocols/survey/libnanomsg_la-surveyor.lo `test -f 'src/protocols/survey/surveyor.c' || echo '$(srcdir)/'`src/protocols/survey/surveyor.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/protocols/survey/$(DEPDIR)/libnanomsg_la-surveyor.Tpo src/protocols/survey/$(DEPDIR)/libnanomsg_la-surveyor.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/protocols/survey/surveyor.c' object='src/protocols/survey/libnanomsg_la-surveyor.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -c -o src/protocols/survey/libnanomsg_la-surveyor.lo `test -f 'src/protocols/survey/surveyor.c' || echo '$(srcdir)/'`src/protocols/survey/surveyor.c

src/protocols/survey/libnanomsg_la-xrespondent.lo: src/protocols/survey/xrespondent.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -MT src/protocols/survey/libnanomsg_la-xrespondent.lo -MD -MP -MF src/protocols/survey/$(DEPDIR)/libnanomsg_la-xrespondent.Tpo -c -o src/protocols/survey/libnanomsg_la-xrespondent.lo `test -f 'src/protocols/survey/xrespondent.c' || echo '$(srcdir)/'`src/protocols/survey/xrespondent.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/protocols/survey/$(DEPDIR)/libnanomsg_la-xrespondent.Tpo src/protocols/survey/$(DEPDIR)/libnanomsg_la-xrespondent.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/protocols/survey/xrespondent.c' object='src/protocols/survey/libnanomsg_la-xrespondent.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -c -o src/protocols/survey/libnanomsg_la-xrespondent.lo `test -f 'src/protocols/survey/xrespondent.c' || echo '$(srcdir)/'`src/protocols/survey/xrespondent.c

src/protocols/survey/libnanomsg_la-xsurveyor.lo: src/protocols/survey/xsurveyor.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -MT src/protocols/survey/libnanomsg_la-xsurveyor.lo -MD -MP -MF src/protocols/survey/$(DEPDIR)/libnanomsg_la-xsurveyor.Tpo -c -o src/protocols/survey/libnanomsg_la-xsurveyor.lo `test -f 'src/protocols/survey/xsurveyor.c' || echo '$(srcdir)/'`src/protocols/survey/xsurveyor.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/protocols/survey/$(DEPDIR)/libnanomsg_la-xsurveyor.Tpo src/protocols/survey/$(DEPDIR)/libnanomsg_la-xsurveyor.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/protocols/survey/xsurveyor.c' object='src/protocols/survey/libnanomsg_la-xsurveyor.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -c -o src/protocols/survey/libnanomsg_la-xsurveyor.lo `test -f 'src/protocols/survey/xsurveyor.c' || echo '$(srcdir)/'`src/protocols/survey/xsurveyor.c

src/protocols/utils/libnanomsg_la-dist.lo: src/protocols/utils/dist.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -MT src/protocols/utils/libnanomsg_la-dist.lo -MD -MP -MF src/protocols/utils/$(DEPDIR)/libnanomsg_la-dist.Tpo -c -o src/protocols/utils/libnanomsg_la-dist.lo `test -f 'src/protocols/utils/dist.c' || echo '$(srcdir)/'`src/protocols/utils/dist.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/protocols/utils/$(DEPDIR)/libnanomsg_la-dist.Tpo src/protocols/utils/$(DEPDIR)/libnanomsg_la-dist.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/protocols/utils/dist.c' object='src/protocols/utils/libnanomsg_la-dist.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -c -o src/protocols/utils/libnanomsg_la-dist.lo `test -f 'src/protocols/utils/dist.c' || echo '$(srcdir)/'`src/protocols/utils/dist.c

src/protocols/utils/libnanomsg_la-excl.lo: src/protocols/utils/excl.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -MT src/protocols/utils/libnanomsg_la-excl.lo -MD -MP -MF src/protocols/utils/$(DEPDIR)/libnanomsg_la-excl.Tpo -c -o src/protocols/utils/libnanomsg_la-excl.lo `test -f 'src/protocols/utils/excl.c' || echo '$(srcdir)/'`src/protocols/utils/excl.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/protocols/utils/$(DEPDIR)/libnanomsg_la-excl.Tpo src/protocols/utils/$(DEPDIR)/libnanomsg_la-excl.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/protocols/utils/excl.c' object='src/protocols/utils/libnanomsg_la-excl.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -c -o src/protocols/utils/libnanomsg_la-excl.lo `test -f 'src/protocols/utils/excl.c' || echo '$(srcdir)/'`src/protocols/utils/excl.c

src/protocols/utils/libnanomsg_la-fq.lo: src/protocols/utils/fq.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -MT src/protocols/utils/libnanomsg_la-fq.lo -MD -MP -MF src/protocols/utils/$(DEPDIR)/libnanomsg_la-fq.Tpo -c -o src/protocols/utils/libnanomsg_la-fq.lo `test -f 'src/protocols/utils/fq.c' || echo '$(srcdir)/'`src/protocols/utils/fq.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/protocols/utils/$(DEPDIR)/libnanomsg_la-fq.Tpo src/protocols/utils/$(DEPDIR)/libnanomsg_la-fq.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/protocols/utils/fq.c' object='src/protocols/utils/libnanomsg_la-fq.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -c -o src/protocols/utils/libnanomsg_la-fq.lo `test -f 'src/protocols/utils/fq.c' || echo '$(srcdir)/'`src/protocols/utils/fq.c

src/protocols/utils/libnanomsg_la-lb.lo: src/protocols/utils/lb.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -MT src/protocols/utils/libnanomsg_la-lb.lo -MD -MP -MF src/protocols/utils/$(DEPDIR)/libnanomsg_la-lb.Tpo -c -o src/protocols/utils/libnanomsg_la-lb.lo `test -f 'src/protocols/utils/lb.c' || echo '$(srcdir)/'`src/protocols/utils/lb.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/protocols/utils/$(DEPDIR)/libnanomsg_la-lb.Tpo src/protocols/utils/$(DEPDIR)/libnanomsg_la-lb.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/protocols/utils/lb.c' object='src/protocols/utils/libnanomsg_la-lb.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -c -o src/protocols/utils/libnanomsg_la-lb.lo `test -f 'src/protocols/utils/lb.c' || echo '$(srcdir)/'`src/protocols/utils/lb.c

src/protocols/utils/libnanomsg_la-priolist.lo: src/protocols/utils/priolist.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -MT src/protocols/utils/libnanomsg_la-priolist.lo -MD -MP -MF src/protocols/utils/$(DEPDIR)/libnanomsg_la-priolist.Tpo -c -o src/protocols/utils/libnanomsg_la-priolist.lo `test -f 'src/protocols/utils/priolist.c' || echo '$(srcdir)/'`src/protocols/utils/priolist.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/protocols/utils/$(DEPDIR)/libnanomsg_la-priolist.Tpo src/protocols/utils/$(DEPDIR)/libnanomsg_la-priolist.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/protocols/utils/priolist.c' object='src/protocols/utils/libnanomsg_la-priolist.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -c -o src/protocols/utils/libnanomsg_la-priolist.lo `test -f 'src/protocols/utils/priolist.c' || echo '$(srcdir)/'`src/protocols/utils/priolist.c

src/transports/utils/libnanomsg_la-backoff.lo: src/transports/utils/backoff.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -MT src/transports/utils/libnanomsg_la-backoff.lo -MD -MP -MF src/transports/utils/$(DEPDIR)/libnanomsg_la-backoff.Tpo -c -o src/transports/utils/libnanomsg_la-backoff.lo `test -f 'src/transports/utils/backoff.c' || echo '$(srcdir)/'`src/transports/utils/backoff.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/transports/utils/$(DEPDIR)/libnanomsg_la-backoff.Tpo src/transports/utils/$(DEPDIR)/libnanomsg_la-backoff.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/transports/utils/backoff.c' object='src/transports/utils/libnanomsg_la-backoff.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -c -o src/transports/utils/libnanomsg_la-backoff.lo `test -f 'src/transports/utils/backoff.c' || echo '$(srcdir)/'`src/transports/utils/backoff.c

src/transports/utils/libnanomsg_la-dns.lo: src/transports/utils/dns.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -MT src/transports/utils/libnanomsg_la-dns.lo -MD -MP -MF src/transports/utils/$(DEPDIR)/libnanomsg_la-dns.Tpo -c -o src/transports/utils/libnanomsg_la-dns.lo `test -f 'src/transports/utils/dns.c' || echo '$(srcdir)/'`src/transports/utils/dns.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/transports/utils/$(DEPDIR)/libnanomsg_la-dns.Tpo src/transports/utils/$(DEPDIR)/libnanomsg_la-dns.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/transports/utils/dns.c' object='src/transports/utils/libnanomsg_la-dns.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -c -o src/transports/utils/libnanomsg_la-dns.lo `test -f 'src/transports/utils/dns.c' || echo '$(srcdir)/'`src/transports/utils/dns.c

src/transports/utils/libnanomsg_la-iface.lo: src/transports/utils/iface.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -MT src/transports/utils/libnanomsg_la-iface.lo -MD -MP -MF src/transports/utils/$(DEPDIR)/libnanomsg_la-iface.Tpo -c -o src/transports/utils/libnanomsg_la-iface.lo `test -f 'src/transports/utils/iface.c' || echo '$(srcdir)/'`src/transports/utils/iface.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/transports/utils/$(DEPDIR)/libnanomsg_la-iface.Tpo src/transports/utils/$(DEPDIR)/libnanomsg_la-iface.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/transports/utils/iface.c' object='src/transports/utils/libnanomsg_la-iface.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -c -o src/transports/utils/libnanomsg_la-iface.lo `test -f 'src/transports/utils/iface.c' || echo '$(srcdir)/'`src/transports/utils/iface.c

src/transports/utils/libnanomsg_la-literal.lo: src/transports/utils/literal.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -MT src/transports/utils/libnanomsg_la-literal.lo -MD -MP -MF src/transports/utils/$(DEPDIR)/libnanomsg_la-literal.Tpo -c -o src/transports/utils/libnanomsg_la-literal.lo `test -f 'src/transports/utils/literal.c' || echo '$(srcdir)/'`src/transports/utils/literal.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/transports/utils/$(DEPDIR)/libnanomsg_la-literal.Tpo src/transports/utils/$(DEPDIR)/libnanomsg_la-literal.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/transports/utils/literal.c' object='src/transports/utils/libnanomsg_la-literal.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -c -o src/transports/utils/libnanomsg_la-literal.lo `test -f 'src/transports/utils/literal.c' || echo '$(srcdir)/'`src/transports/utils/literal.c

src/transports/utils/libnanomsg_la-port.lo: src/transports/utils/port.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -MT src/transports/utils/libnanomsg_la-port.lo -MD -MP -MF src/transports/utils/$(DEPDIR)/libnanomsg_la-port.Tpo -c -o src/transports/utils/libnanomsg_la-port.lo `test -f 'src/transports/utils/port.c' || echo '$(srcdir)/'`src/transports/utils/port.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/transports/utils/$(DEPDIR)/libnanomsg_la-port.Tpo src/transports/utils/$(DEPDIR)/libnanomsg_la-port.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/transports/utils/port.c' object='src/transports/utils/libnanomsg_la-port.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -c -o src/transports/utils/libnanomsg_la-port.lo `test -f 'src/transports/utils/port.c' || echo '$(srcdir)/'`src/transports/utils/port.c

src/transports/utils/libnanomsg_la-streamhdr.lo: src/transports/utils/streamhdr.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -MT src/transports/utils/libnanomsg_la-streamhdr.lo -MD -MP -MF src/transports/utils/$(DEPDIR)/libnanomsg_la-streamhdr.Tpo -c -o src/transports/utils/libnanomsg_la-streamhdr.lo `test -f 'src/transports/utils/streamhdr.c' || echo '$(srcdir)/'`src/transports/utils/streamhdr.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/transports/utils/$(DEPDIR)/libnanomsg_la-streamhdr.Tpo src/transports/utils/$(DEPDIR)/libnanomsg_la-streamhdr.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/transports/utils/streamhdr.c' object='src/transports/utils/libnanomsg_la-streamhdr.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -c -o src/transports/utils/libnanomsg_la-streamhdr.lo `test -f 'src/transports/utils/streamhdr.c' || echo '$(srcdir)/'`src/transports/utils/streamhdr.c

src/transports/inproc/libnanomsg_la-binproc.lo: src/transports/inproc/binproc.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -MT src/transports/inproc/libnanomsg_la-binproc.lo -MD -MP -MF src/transports/inproc/$(DEPDIR)/libnanomsg_la-binproc.Tpo -c -o src/transports/inproc/libnanomsg_la-binproc.lo `test -f 'src/transports/inproc/binproc.c' || echo '$(srcdir)/'`src/transports/inproc/binproc.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/transports/inproc/$(DEPDIR)/libnanomsg_la-binproc.Tpo src/transports/inproc/$(DEPDIR)/libnanomsg_la-binproc.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/transports/inproc/binproc.c' object='src/transports/inproc/libnanomsg_la-binproc.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -c -o src/transports/inproc/libnanomsg_la-binproc.lo `test -f 'src/transports/inproc/binproc.c' || echo '$(srcdir)/'`src/transports/inproc/binproc.c

src/transports/inproc/libnanomsg_la-cinproc.lo: src/transports/inproc/cinproc.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -MT src/transports/inproc/libnanomsg_la-cinproc.lo -MD -MP -MF src/transports/inproc/$(DEPDIR)/libnanomsg_la-cinproc.Tpo -c -o src/transports/inproc/libnanomsg_la-cinproc.lo `test -f 'src/transports/inproc/cinproc.c' || echo '$(srcdir)/'`src/transports/inproc/cinproc.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/transports/inproc/$(DEPDIR)/libnanomsg_la-cinproc.Tpo src/transports/inproc/$(DEPDIR)/libnanomsg_la-cinproc.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/transports/inproc/cinproc.c' object='src/transports/inproc/libnanomsg_la-cinproc.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -c -o src/transports/inproc/libnanomsg_la-cinproc.lo `test -f 'src/transports/inproc/cinproc.c' || echo '$(srcdir)/'`src/transports/inproc/cinproc.c

src/transports/inproc/libnanomsg_la-inproc.lo: src/transports/inproc/inproc.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -MT src/transports/inproc/libnanomsg_la-inproc.lo -MD -MP -MF src/transports/inproc/$(DEPDIR)/libnanomsg_la-inproc.Tpo -c -o src/transports/inproc/libnanomsg_la-inproc.lo `test -f 'src/transports/inproc/inproc.c' || echo '$(srcdir)/'`src/transports/inproc/inproc.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/transports/inproc/$(DEPDIR)/libnanomsg_la-inproc.Tpo src/transports/inproc/$(DEPDIR)/libnanomsg_la-inproc.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/transports/inproc/inproc.c' object='src/transports/inproc/libnanomsg_la-inproc.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -c -o src/transports/inproc/libnanomsg_la-inproc.lo `test -f 'src/transports/inproc/inproc.c' || echo '$(srcdir)/'`src/transports/inproc/inproc.c

src/transports/inproc/libnanomsg_la-ins.lo: src/transports/inproc/ins.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -MT src/transports/inproc/libnanomsg_la-ins.lo -MD -MP -MF src/transports/inproc/$(DEPDIR)/libnanomsg_la-ins.Tpo -c -o src/transports/inproc/libnanomsg_la-ins.lo `test -f 'src/transports/inproc/ins.c' || echo '$(srcdir)/'`src/transports/inproc/ins.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/transports/inproc/$(DEPDIR)/libnanomsg_la-ins.Tpo src/transports/inproc/$(DEPDIR)/libnanomsg_la-ins.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/transports/inproc/ins.c' object='src/transports/inproc/libnanomsg_la-ins.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -c -o src/transports/inproc/libnanomsg_la-ins.lo `test -f 'src/transports/inproc/ins.c' || echo '$(srcdir)/'`src/transports/inproc/ins.c

src/transports/inproc/libnanomsg_la-msgqueue.lo: src/transports/inproc/msgqueue.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -MT src/transports/inproc/libnanomsg_la-msgqueue.lo -MD -MP -MF src/transports/inproc/$(DEPDIR)/libnanomsg_la-msgqueue.Tpo -c -o src/transports/inproc/libnanomsg_la-msgqueue.lo `test -f 'src/transports/inproc/msgqueue.c' || echo '$(srcdir)/'`src/transports/inproc/msgqueue.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/transports/inproc/$(DEPDIR)/libnanomsg_la-msgqueue.Tpo src/transports/inproc/$(DEPDIR)/libnanomsg_la-msgqueue.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/transports/inproc/msgqueue.c' object='src/transports/inproc/libnanomsg_la-msgqueue.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -c -o src/transports/inproc/libnanomsg_la-msgqueue.lo `test -f 'src/transports/inproc/msgqueue.c' || echo '$(srcdir)/'`src/transports/inproc/msgqueue.c

src/transports/inproc/libnanomsg_la-sinproc.lo: src/transports/inproc/sinproc.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -MT src/transports/inproc/libnanomsg_la-sinproc.lo -MD -MP -MF src/transports/inproc/$(DEPDIR)/libnanomsg_la-sinproc.Tpo -c -o src/transports/inproc/libnanomsg_la-sinproc.lo `test -f 'src/transports/inproc/sinproc.c' || echo '$(srcdir)/'`src/transports/inproc/sinproc.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/transports/inproc/$(DEPDIR)/libnanomsg_la-sinproc.Tpo src/transports/inproc/$(DEPDIR)/libnanomsg_la-sinproc.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/transports/inproc/sinproc.c' object='src/transports/inproc/libnanomsg_la-sinproc.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -c -o src/transports/inproc/libnanomsg_la-sinproc.lo `test -f 'src/transports/inproc/sinproc.c' || echo '$(srcdir)/'`src/transports/inproc/sinproc.c

src/transports/ipc/libnanomsg_la-aipc.lo: src/transports/ipc/aipc.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -MT src/transports/ipc/libnanomsg_la-aipc.lo -MD -MP -MF src/transports/ipc/$(DEPDIR)/libnanomsg_la-aipc.Tpo -c -o src/transports/ipc/libnanomsg_la-aipc.lo `test -f 'src/transports/ipc/aipc.c' || echo '$(srcdir)/'`src/transports/ipc/aipc.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/transports/ipc/$(DEPDIR)/libnanomsg_la-aipc.Tpo src/transports/ipc/$(DEPDIR)/libnanomsg_la-aipc.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/transports/ipc/aipc.c' object='src/transports/ipc/libnanomsg_la-aipc.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -c -o src/transports/ipc/libnanomsg_la-aipc.lo `test -f 'src/transports/ipc/aipc.c' || echo '$(srcdir)/'`src/transports/ipc/aipc.c

src/transports/ipc/libnanomsg_la-bipc.lo: src/transports/ipc/bipc.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -MT src/transports/ipc/libnanomsg_la-bipc.lo -MD -MP -MF src/transports/ipc/$(DEPDIR)/libnanomsg_la-bipc.Tpo -c -o src/transports/ipc/libnanomsg_la-bipc.lo `test -f 'src/transports/ipc/bipc.c' || echo '$(srcdir)/'`src/transports/ipc/bipc.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/transports/ipc/$(DEPDIR)/libnanomsg_la-bipc.Tpo src/transports/ipc/$(DEPDIR)/libnanomsg_la-bipc.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/transports/ipc/bipc.c' object='src/transports/ipc/libnanomsg_la-bipc.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -c -o src/transports/ipc/libnanomsg_la-bipc.lo `test -f 'src/transports/ipc/bipc.c' || echo '$(srcdir)/'`src/transports/ipc/bipc.c

src/transports/ipc/libnanomsg_la-cipc.lo: src/transports/ipc/cipc.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -MT src/transports/ipc/libnanomsg_la-cipc.lo -MD -MP -MF src/transports/ipc/$(DEPDIR)/libnanomsg_la-cipc.Tpo -c -o src/transports/ipc/libnanomsg_la-cipc.lo `test -f 'src/transports/ipc/cipc.c' || echo '$(srcdir)/'`src/transports/ipc/cipc.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/transports/ipc/$(DEPDIR)/libnanomsg_la-cipc.Tpo src/transports/ipc/$(DEPDIR)/libnanomsg_la-cipc.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/transports/ipc/cipc.c' object='src/transports/ipc/libnanomsg_la-cipc.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -c -o src/transports/ipc/libnanomsg_la-cipc.lo `test -f 'src/transports/ipc/cipc.c' || echo '$(srcdir)/'`src/transports/ipc/cipc.c

src/transports/ipc/libnanomsg_la-ipc.lo: src/transports/ipc/ipc.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -MT src/transports/ipc/libnanomsg_la-ipc.lo -MD -MP -MF src/transports/ipc/$(DEPDIR)/libnanomsg_la-ipc.Tpo -c -o src/transports/ipc/libnanomsg_la-ipc.lo `test -f 'src/transports/ipc/ipc.c' || echo '$(srcdir)/'`src/transports/ipc/ipc.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/transports/ipc/$(DEPDIR)/libnanomsg_la-ipc.Tpo src/transports/ipc/$(DEPDIR)/libnanomsg_la-ipc.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/transports/ipc/ipc.c' object='src/transports/ipc/libnanomsg_la-ipc.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -c -o src/transports/ipc/libnanomsg_la-ipc.lo `test -f 'src/transports/ipc/ipc.c' || echo '$(srcdir)/'`src/transports/ipc/ipc.c

src/transports/ipc/libnanomsg_la-sipc.lo: src/transports/ipc/sipc.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -MT src/transports/ipc/libnanomsg_la-sipc.lo -MD -MP -MF src/transports/ipc/$(DEPDIR)/libnanomsg_la-sipc.Tpo -c -o src/transports/ipc/libnanomsg_la-sipc.lo `test -f 'src/transports/ipc/sipc.c' || echo '$(srcdir)/'`src/transports/ipc/sipc.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/transports/ipc/$(DEPDIR)/libnanomsg_la-sipc.Tpo src/transports/ipc/$(DEPDIR)/libnanomsg_la-sipc.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/transports/ipc/sipc.c' object='src/transports/ipc/libnanomsg_la-sipc.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -c -o src/transports/ipc/libnanomsg_la-sipc.lo `test -f 'src/transports/ipc/sipc.c' || echo '$(srcdir)/'`src/transports/ipc/sipc.c

src/transports/tcp/libnanomsg_la-atcp.lo: src/transports/tcp/atcp.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -MT src/transports/tcp/libnanomsg_la-atcp.lo -MD -MP -MF src/transports/tcp/$(DEPDIR)/libnanomsg_la-atcp.Tpo -c -o src/transports/tcp/libnanomsg_la-atcp.lo `test -f 'src/transports/tcp/atcp.c' || echo '$(srcdir)/'`src/transports/tcp/atcp.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/transports/tcp/$(DEPDIR)/libnanomsg_la-atcp.Tpo src/transports/tcp/$(DEPDIR)/libnanomsg_la-atcp.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/transports/tcp/atcp.c' object='src/transports/tcp/libnanomsg_la-atcp.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -c -o src/transports/tcp/libnanomsg_la-atcp.lo `test -f 'src/transports/tcp/atcp.c' || echo '$(srcdir)/'`src/transports/tcp/atcp.c

src/transports/tcp/libnanomsg_la-btcp.lo: src/transports/tcp/btcp.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -MT src/transports/tcp/libnanomsg_la-btcp.lo -MD -MP -MF src/transports/tcp/$(DEPDIR)/libnanomsg_la-btcp.Tpo -c -o src/transports/tcp/libnanomsg_la-btcp.lo `test -f 'src/transports/tcp/btcp.c' || echo '$(srcdir)/'`src/transports/tcp/btcp.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/transports/tcp/$(DEPDIR)/libnanomsg_la-btcp.Tpo src/transports/tcp/$(DEPDIR)/libnanomsg_la-btcp.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/transports/tcp/btcp.c' object='src/transports/tcp/libnanomsg_la-btcp.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -c -o src/transports/tcp/libnanomsg_la-btcp.lo `test -f 'src/transports/tcp/btcp.c' || echo '$(srcdir)/'`src/transports/tcp/btcp.c

src/transports/tcp/libnanomsg_la-ctcp.lo: src/transports/tcp/ctcp.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -MT src/transports/tcp/libnanomsg_la-ctcp.lo -MD -MP -MF src/transports/tcp/$(DEPDIR)/libnanomsg_la-ctcp.Tpo -c -o src/transports/tcp/libnanomsg_la-ctcp.lo `test -f 'src/transports/tcp/ctcp.c' || echo '$(srcdir)/'`src/transports/tcp/ctcp.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/transports/tcp/$(DEPDIR)/libnanomsg_la-ctcp.Tpo src/transports/tcp/$(DEPDIR)/libnanomsg_la-ctcp.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/transports/tcp/ctcp.c' object='src/transports/tcp/libnanomsg_la-ctcp.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -c -o src/transports/tcp/libnanomsg_la-ctcp.lo `test -f 'src/transports/tcp/ctcp.c' || echo '$(srcdir)/'`src/transports/tcp/ctcp.c

src/transports/tcp/libnanomsg_la-stcp.lo: src/transports/tcp/stcp.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -MT src/transports/tcp/libnanomsg_la-stcp.lo -MD -MP -MF src/transports/tcp/$(DEPDIR)/libnanomsg_la-stcp.Tpo -c -o src/transports/tcp/libnanomsg_la-stcp.lo `test -f 'src/transports/tcp/stcp.c' || echo '$(srcdir)/'`src/transports/tcp/stcp.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/transports/tcp/$(DEPDIR)/libnanomsg_la-stcp.Tpo src/transports/tcp/$(DEPDIR)/libnanomsg_la-stcp.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/transports/tcp/stcp.c' object='src/transports/tcp/libnanomsg_la-stcp.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -c -o src/transports/tcp/libnanomsg_la-stcp.lo `test -f 'src/transports/tcp/stcp.c' || echo '$(srcdir)/'`src/transports/tcp/stcp.c

src/transports/tcp/libnanomsg_la-tcp.lo: src/transports/tcp/tcp.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -MT src/transports/tcp/libnanomsg_la-tcp.lo -MD -MP -MF src/transports/tcp/$(DEPDIR)/libnanomsg_la-tcp.Tpo -c -o src/transports/tcp/libnanomsg_la-tcp.lo `test -f 'src/transports/tcp/tcp.c' || echo '$(srcdir)/'`src/transports/tcp/tcp.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/transports/tcp/$(DEPDIR)/libnanomsg_la-tcp.Tpo src/transports/tcp/$(DEPDIR)/libnanomsg_la-tcp.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/transports/tcp/tcp.c' object='src/transports/tcp/libnanomsg_la-tcp.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -c -o src/transports/tcp/libnanomsg_la-tcp.lo `test -f 'src/transports/tcp/tcp.c' || echo '$(srcdir)/'`src/transports/tcp/tcp.c

src/devices/libnanomsg_la-device.lo: src/devices/device.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -MT src/devices/libnanomsg_la-device.lo -MD -MP -MF src/devices/$(DEPDIR)/libnanomsg_la-device.Tpo -c -o src/devices/libnanomsg_la-device.lo `test -f 'src/devices/device.c' || echo '$(srcdir)/'`src/devices/device.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/devices/$(DEPDIR)/libnanomsg_la-device.Tpo src/devices/$(DEPDIR)/libnanomsg_la-device.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/devices/device.c' object='src/devices/libnanomsg_la-device.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnanomsg_la_CFLAGS) $(CFLAGS) -c -o src/devices/libnanomsg_la-device.lo `test -f 'src/devices/device.c' || echo '$(srcdir)/'`src/devices/device.c

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
	-rm -rf perf/.libs perf/_libs
	-rm -rf src/aio/.libs src/aio/_libs
	-rm -rf src/core/.libs src/core/_libs
	-rm -rf src/devices/.libs src/devices/_libs
	-rm -rf src/protocols/bus/.libs src/protocols/bus/_libs
	-rm -rf src/protocols/pair/.libs src/protocols/pair/_libs
	-rm -rf src/protocols/pipeline/.libs src/protocols/pipeline/_libs
	-rm -rf src/protocols/pubsub/.libs src/protocols/pubsub/_libs
	-rm -rf src/protocols/reqrep/.libs src/protocols/reqrep/_libs
	-rm -rf src/protocols/survey/.libs src/protocols/survey/_libs
	-rm -rf src/protocols/utils/.libs src/protocols/utils/_libs
	-rm -rf src/transports/inproc/.libs src/transports/inproc/_libs
	-rm -rf src/transports/ipc/.libs src/transports/ipc/_libs
	-rm -rf src/transports/tcp/.libs src/transports/tcp/_libs
	-rm -rf src/transports/utils/.libs src/transports/utils/_libs
	-rm -rf src/utils/.libs src/utils/_libs
	-rm -rf tests/.libs tests/_libs

distclean-libtool:
	-rm -f libtool config.lt
install-man1: $(dist_man1_MANS)
	@$(NORMAL_INSTALL)
	@list1='$(dist_man1_MANS)'; \
	list2=''; \
	test -n "$(man1dir)" \
	  && test -n "`echo $$list1$$list2`" \
	  || exit 0; \
	echo " $(MKDIR_P) '$(DESTDIR)$(man1dir)'"; \
	$(MKDIR_P) "$(DESTDIR)$(man1dir)" || exit 1; \
	{ for i in $$list1; do echo "$$i"; done;  \
	if test -n "$$list2"; then \
	  for i in $$list2; do echo "$$i"; done \
	    | sed -n '/\.1[a-z]*$$/p'; \
	fi; \
	} | while read p; do \
	  if test -f $$p; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; echo "$$p"; \
	done | \
	sed -e 'n;s,.*/,,;p;h;s,.*\.,,;s,^[^1][0-9a-z]*$$,1,;x' \
	      -e 's,\.[0-9a-z]*$$,,;$(transform);G;s,\n,.,' | \
	sed 'N;N;s,\n, ,g' | { \
	list=; while read file base inst; do \
	  if test "$$base" = "$$inst"; then list="$$list $$file"; else \
	    echo " $(INSTALL_DATA) '$$file' '$(DESTDIR)$(man1dir)/$$inst'"; \
	    $(INSTALL_DATA) "$$file" "$(DESTDIR)$(man1dir)/$$inst" || exit $$?; \
	  fi; \
	done; \
	for i in $$list; do echo "$$i"; done | $(am__base_list) | \
	while read files; do \
	  test -z "$$files" || { \
	    echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(man1dir)'"; \
	    $(INSTALL_DATA) $$files "$(DESTDIR)$(man1dir)" || exit $$?; }; \
	done; }

uninstall-man1:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_man1_MANS)'; test -n "$(man1dir)" || exit 0; \
	files=`{ for i in $$list; do echo "$$i"; done; \
	} | sed -e 's,.*/,,;h;s,.*\.,,;s,^[^1][0-9a-z]*$$,1,;x' \
	      -e 's,\.[0-9a-z]*$$,,;$(transform);G;s,\n,.,'`; \
	dir='$(DESTDIR)$(man1dir)'; $(am__uninstall_files_from_dir)
install-man3: $(dist_man3_MANS)
	@$(NORMAL_INSTALL)
	@list1='$(dist_man3_MANS)'; \
	list2=''; \
	test -n "$(man3dir)" \
	  && test -n "`echo $$list1$$list2`" \
	  || exit 0; \
	echo " $(MKDIR_P) '$(DESTDIR)$(man3dir)'"; \
	$(MKDIR_P) "$(DESTDIR)$(man3dir)" || exit 1; \
	{ for i in $$list1; do echo "$$i"; done;  \
	if test -n "$$list2"; then \
	  for i in $$list2; do echo "$$i"; done \
	    | sed -n '/\.3[a-z]*$$/p'; \
	fi; \
	} | while read p; do \
	  if test -f $$p; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; echo "$$p"; \
	done | \
	sed -e 'n;s,.*/,,;p;h;s,.*\.,,;s,^[^3][0-9a-z]*$$,3,;x' \
	      -e 's,\.[0-9a-z]*$$,,;$(transform);G;s,\n,.,' | \
	sed 'N;N;s,\n, ,g' | { \
	list=; while read file base inst; do \
	  if test "$$base" = "$$inst"; then list="$$list $$file"; else \
	    echo " $(INSTALL_DATA) '$$file' '$(DESTDIR)$(man3dir)/$$inst'"; \
	    $(INSTALL_DATA) "$$file" "$(DESTDIR)$(man3dir)/$$inst" || exit $$?; \
	  fi; \
	done; \
	for i in $$list; do echo "$$i"; done | $(am__base_list) | \
	while read files; do \
	  test -z "$$files" || { \
	    echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(man3dir)'"; \
	    $(INSTALL_DATA) $$files "$(DESTDIR)$(man3dir)" || exit $$?; }; \
	done; }

uninstall-man3:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_man3_MANS)'; test -n "$(man3dir)" || exit 0; \
	files=`{ for i in $$list; do echo "$$i"; done; \
	} | sed -e 's,.*/,,;h;s,.*\.,,;s,^[^3][0-9a-z]*$$,3,;x' \
	      -e 's,\.[0-9a-z]*$$,,;$(transform);G;s,\n,.,'`; \
	dir='$(DESTDIR)$(man3dir)'; $(am__uninstall_files_from_dir)
install-man7: $(dist_man7_MANS)
	@$(NORMAL_INSTALL)
	@list1='$(dist_man7_MANS)'; \
	list2=''; \
	test -n "$(man7dir)" \
	  && test -n "`echo $$list1$$list2`" \
	  || exit 0; \
	echo " $(MKDIR_P) '$(DESTDIR)$(man7dir)'"; \
	$(MKDIR_P) "$(DESTDIR)$(man7dir)" || exit 1; \
	{ for i in $$list1; do echo "$$i"; done;  \
	if test -n "$$list2"; then \
	  for i in $$list2; do echo "$$i"; done \
	    | sed -n '/\.7[a-z]*$$/p'; \
	fi; \
	} | while read p; do \
	  if test -f $$p; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; echo "$$p"; \
	done | \
	sed -e 'n;s,.*/,,;p;h;s,.*\.,,;s,^[^7][0-9a-z]*$$,7,;x' \
	      -e 's,\.[0-9a-z]*$$,,;$(transform);G;s,\n,.,' | \
	sed 'N;N;s,\n, ,g' | { \
	list=; while read file base inst; do \
	  if test "$$base" = "$$inst"; then list="$$list $$file"; else \
	    echo " $(INSTALL_DATA) '$$file' '$(DESTDIR)$(man7dir)/$$inst'"; \
	    $(INSTALL_DATA) "$$file" "$(DESTDIR)$(man7dir)/$$inst" || exit $$?; \
	  fi; \
	done; \
	for i in $$list; do echo "$$i"; done | $(am__base_list) | \
	while read files; do \
	  test -z "$$files" || { \
	    echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(man7dir)'"; \
	    $(INSTALL_DATA) $$files "$(DESTDIR)$(man7dir)" || exit $$?; }; \
	done; }

uninstall-man7:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_man7_MANS)'; test -n "$(man7dir)" || exit 0; \
	files=`{ for i in $$list; do echo "$$i"; done; \
	} | sed -e 's,.*/,,;h;s,.*\.,,;s,^[^7][0-9a-z]*$$,7,;x' \
	      -e 's,\.[0-9a-z]*$$,,;$(transform);G;s,\n,.,'`; \
	dir='$(DESTDIR)$(man7dir)'; $(am__uninstall_files_from_dir)
install-docDATA: $(doc_DATA)
	@$(NORMAL_INSTALL)
	@list='$(doc_DATA)'; test -n "$(docdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(docdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(docdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(docdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(docdir)" || exit $$?; \
	done

uninstall-docDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(doc_DATA)'; test -n "$(docdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(docdir)'; $(am__uninstall_files_from_dir)
install-pkgconfigDATA: $(pkgconfig_DATA)
	@$(NORMAL_INSTALL)
	@list='$(pkgconfig_DATA)'; test -n "$(pkgconfigdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(pkgconfigdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(pkgconfigdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(pkgconfigdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(pkgconfigdir)" || exit $$?; \
	done

uninstall-pkgconfigDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(pkgconfig_DATA)'; test -n "$(pkgconfigdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(pkgconfigdir)'; $(am__uninstall_files_from_dir)
install-nnincludeHEADERS: $(nninclude_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(nninclude_HEADERS)'; test -n "$(nnincludedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(nnincludedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(nnincludedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(nnincludedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(nnincludedir)" || exit $$?; \
	done

uninstall-nnincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(nninclude_HEADERS)'; test -n "$(nnincludedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(nnincludedir)'; $(am__uninstall_files_from_dir)

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscope: cscope.files
	test ! -s cscope.files \
	  || $(CSCOPE) -b -q $(AM_CSCOPEFLAGS) $(CSCOPEFLAGS) -i cscope.files $(CSCOPE_ARGS)
clean-cscope:
	-rm -f cscope.files
cscope.files: clean-cscope cscopelist
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
	-rm -f cscope.out cscope.in.out cscope.po.out cscope.files

# Recover from deleted '.trs' file; this should ensure that
# "rm -f foo.log; make foo.trs" re-run 'foo.test', and re-create
# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells
# to avoid problems with "make -n".
.log.trs:
	rm -f $< $@
	$(MAKE) $(AM_MAKEFLAGS) $<

# Leading 'am--fnord' is there to ensure the list of targets does not
# expand to empty, as could happen e.g. with make check TESTS=''.
am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)
am--force-recheck:
	@:

$(TEST_SUITE_LOG): $(TEST_LOGS)
	@$(am__set_TESTS_bases); \
	am__f_ok () { test -f "$$1" && test -r "$$1"; }; \
	redo_bases=`for i in $$bases; do \
	              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \
	            done`; \
	if test -n "$$redo_bases"; then \
	  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \
	  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \
	  if $(am__make_dryrun); then :; else \
	    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \
	  fi; \
	fi; \
	if test -n "$$am__remaking_logs"; then \
	  echo "fatal: making $(TEST_SUITE_LOG): possible infinite" \
	       "recursion detected" >&2; \
	else \
	  am__remaking_logs=yes $(MAKE) $(AM_MAKEFLAGS) $$redo_logs; \
	fi; \
	if $(am__make_dryrun); then :; else \
	  st=0;  \
	  errmsg="fatal: making $(TEST_SUITE_LOG): failed to create"; \
	  for i in $$redo_bases; do \
	    test -f $$i.trs && test -r $$i.trs \
	      || { echo "$$errmsg $$i.trs" >&2; st=1; }; \
	    test -f $$i.log && test -r $$i.log \
	      || { echo "$$errmsg $$i.log" >&2; st=1; }; \
	  done; \
	  test $$st -eq 0 || exit 1; \
	fi
	@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \
	ws='[ 	]'; \
	results=`for b in $$bases; do echo $$b.trs; done`; \
	test -n "$$results" || results=/dev/null; \
	all=`  grep "^$$ws*:test-result:"           $$results | wc -l`; \
	pass=` grep "^$$ws*:test-result:$$ws*PASS"  $$results | wc -l`; \
	fail=` grep "^$$ws*:test-result:$$ws*FAIL"  $$results | wc -l`; \
	skip=` grep "^$$ws*:test-result:$$ws*SKIP"  $$results | wc -l`; \
	xfail=`grep "^$$ws*:test-result:$$ws*XFAIL" $$results | wc -l`; \
	xpass=`grep "^$$ws*:test-result:$$ws*XPASS" $$results | wc -l`; \
	error=`grep "^$$ws*:test-result:$$ws*ERROR" $$results | wc -l`; \
	if test `expr $$fail + $$xpass + $$error` -eq 0; then \
	  success=true; \
	else \
	  success=false; \
	fi; \
	br='==================='; br=$$br$$br$$br$$br; \
	result_count () \
	{ \
	    if test x"$$1" = x"--maybe-color"; then \
	      maybe_colorize=yes; \
	    elif test x"$$1" = x"--no-color"; then \
	      maybe_colorize=no; \
	    else \
	      echo "$@: invalid 'result_count' usage" >&2; exit 4; \
	    fi; \
	    shift; \
	    desc=$$1 count=$$2; \
	    if test $$maybe_colorize = yes && test $$count -gt 0; then \
	      color_start=$$3 color_end=$$std; \
	    else \
	      color_start= color_end=; \
	    fi; \
	    echo "$${color_start}# $$desc $$count$${color_end}"; \
	}; \
	create_testsuite_report () \
	{ \
	  result_count $$1 "TOTAL:" $$all   "$$brg"; \
	  result_count $$1 "PASS: " $$pass  "$$grn"; \
	  result_count $$1 "SKIP: " $$skip  "$$blu"; \
	  result_count $$1 "XFAIL:" $$xfail "$$lgn"; \
	  result_count $$1 "FAIL: " $$fail  "$$red"; \
	  result_count $$1 "XPASS:" $$xpass "$$red"; \
	  result_count $$1 "ERROR:" $$error "$$mgn"; \
	}; \
	{								\
	  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |	\
	    $(am__rst_title);						\
	  create_testsuite_report --no-color;				\
	  echo;								\
	  echo ".. contents:: :depth: 2";				\
	  echo;								\
	  for b in $$bases; do echo $$b; done				\
	    | $(am__create_global_log);					\
	} >$(TEST_SUITE_LOG).tmp || exit 1;				\
	mv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);			\
	if $$success; then						\
	  col="$$grn";							\
	 else								\
	  col="$$red";							\
	  test x"$$VERBOSE" = x || cat $(TEST_SUITE_LOG);		\
	fi;								\
	echo "$${col}$$br$${std}"; 					\
	echo "$${col}Testsuite summary for $(PACKAGE_STRING)$${std}";	\
	echo "$${col}$$br$${std}"; 					\
	create_testsuite_report --maybe-color;				\
	echo "$$col$$br$$std";						\
	if $$success; then :; else					\
	  echo "$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}";		\
	  if test -n "$(PACKAGE_BUGREPORT)"; then			\
	    echo "$${col}Please report to $(PACKAGE_BUGREPORT)$${std}";	\
	  fi;								\
	  echo "$$col$$br$$std";					\
	fi;								\
	$$success || exit 1

check-TESTS:
	@list='$(RECHECK_LOGS)';           test -z "$$list" || rm -f $$list
	@list='$(RECHECK_LOGS:.log=.trs)'; test -z "$$list" || rm -f $$list
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	trs_list=`for i in $$bases; do echo $$i.trs; done`; \
	log_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS="$$log_list"; \
	exit $$?;
recheck: all $(check_PROGRAMS)
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	bases=`for i in $$bases; do echo $$i; done \
	         | $(am__list_recheck_tests)` || exit 1; \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	log_list=`echo $$log_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) \
	        am__force_recheck=am--force-recheck \
	        TEST_LOGS="$$log_list"; \
	exit $$?
tests/inproc.log: tests/inproc$(EXEEXT)
	@p='tests/inproc$(EXEEXT)'; \
	b='tests/inproc'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/inproc_shutdown.log: tests/inproc_shutdown$(EXEEXT)
	@p='tests/inproc_shutdown$(EXEEXT)'; \
	b='tests/inproc_shutdown'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/ipc.log: tests/ipc$(EXEEXT)
	@p='tests/ipc$(EXEEXT)'; \
	b='tests/ipc'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/ipc_shutdown.log: tests/ipc_shutdown$(EXEEXT)
	@p='tests/ipc_shutdown$(EXEEXT)'; \
	b='tests/ipc_shutdown'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/ipc_stress.log: tests/ipc_stress$(EXEEXT)
	@p='tests/ipc_stress$(EXEEXT)'; \
	b='tests/ipc_stress'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/tcp.log: tests/tcp$(EXEEXT)
	@p='tests/tcp$(EXEEXT)'; \
	b='tests/tcp'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/tcp_shutdown.log: tests/tcp_shutdown$(EXEEXT)
	@p='tests/tcp_shutdown$(EXEEXT)'; \
	b='tests/tcp_shutdown'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/pair.log: tests/pair$(EXEEXT)
	@p='tests/pair$(EXEEXT)'; \
	b='tests/pair'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/pubsub.log: tests/pubsub$(EXEEXT)
	@p='tests/pubsub$(EXEEXT)'; \
	b='tests/pubsub'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/reqrep.log: tests/reqrep$(EXEEXT)
	@p='tests/reqrep$(EXEEXT)'; \
	b='tests/reqrep'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/pipeline.log: tests/pipeline$(EXEEXT)
	@p='tests/pipeline$(EXEEXT)'; \
	b='tests/pipeline'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/survey.log: tests/survey$(EXEEXT)
	@p='tests/survey$(EXEEXT)'; \
	b='tests/survey'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/bus.log: tests/bus$(EXEEXT)
	@p='tests/bus$(EXEEXT)'; \
	b='tests/bus'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/block.log: tests/block$(EXEEXT)
	@p='tests/block$(EXEEXT)'; \
	b='tests/block'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/term.log: tests/term$(EXEEXT)
	@p='tests/term$(EXEEXT)'; \
	b='tests/term'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/timeo.log: tests/timeo$(EXEEXT)
	@p='tests/timeo$(EXEEXT)'; \
	b='tests/timeo'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/iovec.log: tests/iovec$(EXEEXT)
	@p='tests/iovec$(EXEEXT)'; \
	b='tests/iovec'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/msg.log: tests/msg$(EXEEXT)
	@p='tests/msg$(EXEEXT)'; \
	b='tests/msg'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/prio.log: tests/prio$(EXEEXT)
	@p='tests/prio$(EXEEXT)'; \
	b='tests/prio'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/poll.log: tests/poll$(EXEEXT)
	@p='tests/poll$(EXEEXT)'; \
	b='tests/poll'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/device.log: tests/device$(EXEEXT)
	@p='tests/device$(EXEEXT)'; \
	b='tests/device'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/emfile.log: tests/emfile$(EXEEXT)
	@p='tests/emfile$(EXEEXT)'; \
	b='tests/emfile'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/domain.log: tests/domain$(EXEEXT)
	@p='tests/domain$(EXEEXT)'; \
	b='tests/domain'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/trie.log: tests/trie$(EXEEXT)
	@p='tests/trie$(EXEEXT)'; \
	b='tests/trie'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/list.log: tests/list$(EXEEXT)
	@p='tests/list$(EXEEXT)'; \
	b='tests/list'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/hash.log: tests/hash$(EXEEXT)
	@p='tests/hash$(EXEEXT)'; \
	b='tests/hash'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/symbol.log: tests/symbol$(EXEEXT)
	@p='tests/symbol$(EXEEXT)'; \
	b='tests/symbol'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/separation.log: tests/separation$(EXEEXT)
	@p='tests/separation$(EXEEXT)'; \
	b='tests/separation'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/zerocopy.log: tests/zerocopy$(EXEEXT)
	@p='tests/zerocopy$(EXEEXT)'; \
	b='tests/zerocopy'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/shutdown.log: tests/shutdown$(EXEEXT)
	@p='tests/shutdown$(EXEEXT)'; \
	b='tests/shutdown'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/cmsg.log: tests/cmsg$(EXEEXT)
	@p='tests/cmsg$(EXEEXT)'; \
	b='tests/cmsg'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
.test.log:
	@p='$<'; \
	$(am__set_b); \
	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
@am__EXEEXT_TRUE@.test$(EXEEXT).log:
@am__EXEEXT_TRUE@	@p='$<'; \
@am__EXEEXT_TRUE@	$(am__set_b); \
@am__EXEEXT_TRUE@	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
@am__EXEEXT_TRUE@	--log-file $$b.log --trs-file $$b.trs \
@am__EXEEXT_TRUE@	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
@am__EXEEXT_TRUE@	"$$tst" $(AM_TESTS_FD_REDIRECT)

distdir: $(DISTFILES)
	$(am__remove_distdir)
	test -d "$(distdir)" || mkdir "$(distdir)"
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	$(MAKE) $(AM_MAKEFLAGS) \
	  top_distdir="$(top_distdir)" distdir="$(distdir)" \
	  dist-hook
	-test -n "$(am__skip_mode_fix)" \
	|| find "$(distdir)" -type d ! -perm -755 \
		-exec chmod u+rwx,go+rx {} \; -o \
	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -400 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -444 -exec $(install_sh) -c -m a+r {} {} \; \
	|| chmod -R a+r "$(distdir)"
dist-gzip: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__post_remove_distdir)

dist-bzip2: distdir
	tardir=$(distdir) && $(am__tar) | BZIP2=$${BZIP2--9} bzip2 -c >$(distdir).tar.bz2
	$(am__post_remove_distdir)

dist-lzip: distdir
	tardir=$(distdir) && $(am__tar) | lzip -c $${LZIP_OPT--9} >$(distdir).tar.lz
	$(am__post_remove_distdir)

dist-xz: distdir
	tardir=$(distdir) && $(am__tar) | XZ_OPT=$${XZ_OPT--e} xz -c >$(distdir).tar.xz
	$(am__post_remove_distdir)

dist-tarZ: distdir
	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z
	$(am__post_remove_distdir)

dist-shar: distdir
	shar $(distdir) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).shar.gz
	$(am__post_remove_distdir)
dist-zip: distdir
	-rm -f $(distdir).zip
	zip -rq $(distdir).zip $(distdir)
	$(am__post_remove_distdir)

dist dist-all:
	$(MAKE) $(AM_MAKEFLAGS) $(DIST_TARGETS) am__post_remove_distdir='@:'
	$(am__post_remove_distdir)

# This target untars the dist file and tries a VPATH configuration.  Then
# it guarantees that the distribution is self-contained by making another
# tarfile.
distcheck: dist
	case '$(DIST_ARCHIVES)' in \
	*.tar.gz*) \
	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).tar.gz | $(am__untar) ;;\
	*.tar.bz2*) \
	  bzip2 -dc $(distdir).tar.bz2 | $(am__untar) ;;\
	*.tar.lz*) \
	  lzip -dc $(distdir).tar.lz | $(am__untar) ;;\
	*.tar.xz*) \
	  xz -dc $(distdir).tar.xz | $(am__untar) ;;\
	*.tar.Z*) \
	  uncompress -c $(distdir).tar.Z | $(am__untar) ;;\
	*.shar.gz*) \
	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).shar.gz | unshar ;;\
	*.zip*) \
	  unzip $(distdir).zip ;;\
	esac
	chmod -R a-w $(distdir)
	chmod u+w $(distdir)
	mkdir $(distdir)/_build $(distdir)/_inst
	chmod a-w $(distdir)
	test -d $(distdir)/_build || exit 0; \
	dc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\/]:[\\/],/,'` \
	  && dc_destdir="$${TMPDIR-/tmp}/am-dc-$$$$/" \
	  && am__cwd=`pwd` \
	  && $(am__cd) $(distdir)/_build \
	  && ../configure --srcdir=.. --prefix="$$dc_install_base" \
	    $(AM_DISTCHECK_CONFIGURE_FLAGS) \
	    $(DISTCHECK_CONFIGURE_FLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) dvi \
	  && $(MAKE) $(AM_MAKEFLAGS) check \
	  && $(MAKE) $(AM_MAKEFLAGS) install \
	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
	  && $(MAKE) $(AM_MAKEFLAGS) uninstall \
	  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir="$$dc_install_base" \
	        distuninstallcheck \
	  && chmod -R a-w "$$dc_install_base" \
	  && ({ \
	       (cd ../.. && umask 077 && mkdir "$$dc_destdir") \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" install \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" uninstall \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" \
	            distuninstallcheck_dir="$$dc_destdir" distuninstallcheck; \
	      } || { rm -rf "$$dc_destdir"; exit 1; }) \
	  && rm -rf "$$dc_destdir" \
	  && $(MAKE) $(AM_MAKEFLAGS) dist \
	  && rm -rf $(DIST_ARCHIVES) \
	  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck \
	  && cd "$$am__cwd" \
	  || exit 1
	$(am__post_remove_distdir)
	@(echo "$(distdir) archives ready for distribution: "; \
	  list='$(DIST_ARCHIVES)'; for i in $$list; do echo $$i; done) | \
	  sed -e 1h -e 1s/./=/g -e 1p -e 1x -e '$$p' -e '$$x'
distuninstallcheck:
	@test -n '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: trying to run $@ with an empty' \
	       '$$(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	$(am__cd) '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: cannot chdir into $(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	test `$(am__distuninstallcheck_listfiles) | wc -l` -eq 0 \
	   || { echo "ERROR: files left after uninstall:" ; \
	        if test -n "$(DESTDIR)"; then \
	          echo "  (check DESTDIR support)"; \
	        fi ; \
	        $(distuninstallcheck_listfiles) ; \
	        exit 1; } >&2
distcleancheck: distclean
	@if test '$(srcdir)' = . ; then \
	  echo "ERROR: distcleancheck can only run from a VPATH build" ; \
	  exit 1 ; \
	fi
	@test `$(distcleancheck_listfiles) | wc -l` -eq 0 \
	  || { echo "ERROR: files left in build directory after distclean:" ; \
	       $(distcleancheck_listfiles) ; \
	       exit 1; } >&2
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS) $(MANS) $(DATA) $(HEADERS)
install-binPROGRAMS: install-libLTLIBRARIES

installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(man1dir)" "$(DESTDIR)$(man3dir)" "$(DESTDIR)$(man7dir)" "$(DESTDIR)$(docdir)" "$(DESTDIR)$(pkgconfigdir)" "$(DESTDIR)$(nnincludedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)
	-test -z "$(TEST_LOGS:.log=.trs)" || rm -f $(TEST_LOGS:.log=.trs)
	-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f perf/$(DEPDIR)/$(am__dirstamp)
	-rm -f perf/$(am__dirstamp)
	-rm -f src/aio/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/aio/$(am__dirstamp)
	-rm -f src/core/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/core/$(am__dirstamp)
	-rm -f src/devices/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/devices/$(am__dirstamp)
	-rm -f src/protocols/bus/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/protocols/bus/$(am__dirstamp)
	-rm -f src/protocols/pair/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/protocols/pair/$(am__dirstamp)
	-rm -f src/protocols/pipeline/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/protocols/pipeline/$(am__dirstamp)
	-rm -f src/protocols/pubsub/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/protocols/pubsub/$(am__dirstamp)
	-rm -f src/protocols/reqrep/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/protocols/reqrep/$(am__dirstamp)
	-rm -f src/protocols/survey/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/protocols/survey/$(am__dirstamp)
	-rm -f src/protocols/utils/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/protocols/utils/$(am__dirstamp)
	-rm -f src/transports/inproc/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/transports/inproc/$(am__dirstamp)
	-rm -f src/transports/ipc/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/transports/ipc/$(am__dirstamp)
	-rm -f src/transports/tcp/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/transports/tcp/$(am__dirstamp)
	-rm -f src/transports/utils/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/transports/utils/$(am__dirstamp)
	-rm -f src/utils/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/utils/$(am__dirstamp)
	-rm -f tests/$(DEPDIR)/$(am__dirstamp)
	-rm -f tests/$(am__dirstamp)
	-rm -f tools/$(DEPDIR)/$(am__dirstamp)
	-rm -f tools/$(am__dirstamp)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
@NANOCAT_FALSE@install-exec-hook:
@SYMLINKS_FALSE@install-exec-hook:
@NANOCAT_FALSE@uninstall-hook:
@SYMLINKS_FALSE@uninstall-hook:
clean: clean-am

clean-am: clean-binPROGRAMS clean-checkPROGRAMS clean-generic \
	clean-libLTLIBRARIES clean-libtool clean-local \
	clean-noinstPROGRAMS mostlyclean-am

distclean: distclean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf perf/$(DEPDIR) src/aio/$(DEPDIR) src/core/$(DEPDIR) src/devices/$(DEPDIR) src/protocols/bus/$(DEPDIR) src/protocols/pair/$(DEPDIR) src/protocols/pipeline/$(DEPDIR) src/protocols/pubsub/$(DEPDIR) src/protocols/reqrep/$(DEPDIR) src/protocols/survey/$(DEPDIR) src/protocols/utils/$(DEPDIR) src/transports/inproc/$(DEPDIR) src/transports/ipc/$(DEPDIR) src/transports/tcp/$(DEPDIR) src/transports/utils/$(DEPDIR) src/utils/$(DEPDIR) tests/$(DEPDIR) tools/$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-docDATA install-man install-nnincludeHEADERS \
	install-pkgconfigDATA

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS install-libLTLIBRARIES
	@$(NORMAL_INSTALL)
	$(MAKE) $(AM_MAKEFLAGS) install-exec-hook
install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man: install-man1 install-man3 install-man7

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf $(top_srcdir)/autom4te.cache
	-rm -rf perf/$(DEPDIR) src/aio/$(DEPDIR) src/core/$(DEPDIR) src/devices/$(DEPDIR) src/protocols/bus/$(DEPDIR) src/protocols/pair/$(DEPDIR) src/protocols/pipeline/$(DEPDIR) src/protocols/pubsub/$(DEPDIR) src/protocols/reqrep/$(DEPDIR) src/protocols/survey/$(DEPDIR) src/protocols/utils/$(DEPDIR) src/transports/inproc/$(DEPDIR) src/transports/ipc/$(DEPDIR) src/transports/tcp/$(DEPDIR) src/transports/utils/$(DEPDIR) src/utils/$(DEPDIR) tests/$(DEPDIR) tools/$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-docDATA \
	uninstall-libLTLIBRARIES uninstall-man \
	uninstall-nnincludeHEADERS uninstall-pkgconfigDATA
	@$(NORMAL_INSTALL)
	$(MAKE) $(AM_MAKEFLAGS) uninstall-hook
uninstall-man: uninstall-man1 uninstall-man3 uninstall-man7

.MAKE: check-am install-am install-exec-am install-strip uninstall-am

.PHONY: CTAGS GTAGS TAGS all all-am am--refresh check check-TESTS \
	check-am clean clean-binPROGRAMS clean-checkPROGRAMS \
	clean-cscope clean-generic clean-libLTLIBRARIES clean-libtool \
	clean-local clean-noinstPROGRAMS cscope cscopelist-am ctags \
	ctags-am dist dist-all dist-bzip2 dist-gzip dist-hook \
	dist-lzip dist-shar dist-tarZ dist-xz dist-zip distcheck \
	distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distcleancheck distdir \
	distuninstallcheck dvi dvi-am html html-am info info-am \
	install install-am install-binPROGRAMS install-data \
	install-data-am install-docDATA install-dvi install-dvi-am \
	install-exec install-exec-am install-exec-hook install-html \
	install-html-am install-info install-info-am \
	install-libLTLIBRARIES install-man install-man1 install-man3 \
	install-man7 install-nnincludeHEADERS install-pdf \
	install-pdf-am install-pkgconfigDATA install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am recheck tags tags-am uninstall \
	uninstall-am uninstall-binPROGRAMS uninstall-docDATA \
	uninstall-hook uninstall-libLTLIBRARIES uninstall-man \
	uninstall-man1 uninstall-man3 uninstall-man7 \
	uninstall-nnincludeHEADERS uninstall-pkgconfigDATA


#  Build instructions.

@DOC_TRUE@.txt.xml:
@DOC_TRUE@	$(AM_V_GEN)$(ASCIIDOC) -d manpage -b docbook \
@DOC_TRUE@        -f $(abs_srcdir)/doc/asciidoc.conf \
@DOC_TRUE@        -aversion=@NN_PACKAGE_VERSION@ -o $@ $<
@DOC_TRUE@.xml.1:
@DOC_TRUE@	$(AM_V_GEN)$(XMLTO) -o doc man $<
@DOC_TRUE@.xml.3:
@DOC_TRUE@	$(AM_V_GEN)$(XMLTO) -o doc man $<
@DOC_TRUE@.xml.7:
@DOC_TRUE@	$(AM_V_GEN)$(XMLTO) -o doc man $<

@DOC_TRUE@.txt.1.html:
@DOC_TRUE@	$(AM_V_GEN)$(ASCIIDOC) -d manpage -b xhtml11 \
@DOC_TRUE@        -a stylesheet=$(abs_srcdir)/doc/htmldoc.css \
@DOC_TRUE@        -f $(abs_srcdir)/doc/asciidoc.conf \
@DOC_TRUE@        -aversion=@NN_PACKAGE_VERSION@ -o $@ $<

@DOC_TRUE@.txt.3.html:
@DOC_TRUE@	$(AM_V_GEN)$(ASCIIDOC) -d manpage -b xhtml11 \
@DOC_TRUE@        -a stylesheet=$(abs_srcdir)/doc/htmldoc.css \
@DOC_TRUE@        -f $(abs_srcdir)/doc/asciidoc.conf \
@DOC_TRUE@        -aversion=@NN_PACKAGE_VERSION@ -o $@ $<

@DOC_TRUE@.txt.7.html:
@DOC_TRUE@	$(AM_V_GEN)$(ASCIIDOC) -d manpage -b xhtml11 \
@DOC_TRUE@        -a stylesheet=$(abs_srcdir)/doc/htmldoc.css \
@DOC_TRUE@        -f $(abs_srcdir)/doc/asciidoc.conf \
@DOC_TRUE@        -aversion=@NN_PACKAGE_VERSION@ -o $@ $<

################################################################################
#  additional packaging-related stuff                                          #
################################################################################

#  Generate ChangeLog file from git.
#  Also, there's no git availabe when building from the source package and
#  thus no way to obtain package version. Therefore, package version is
#  saved into a file when building a source package.
dist-hook:
	@if test -d "$(srcdir)/.git"; \
	then \
		echo Creating ChangeLog; \
		cd "$(top_srcdir)"; \
		(echo '# Generated by Makefile. Do not edit.'; echo; \
		  ./missing --run git log --decorate ) > ChangeLog.tmp; \
		mv -f ChangeLog.tmp $(top_distdir)/ChangeLog; \
		rm -f ChangeLog.tmp; \
    else \
        cp -f ChangeLog $(top_distdir)/ChangeLog || \
        echo Failed to generate ChangeLog >&2; \
	fi; \
	$(srcdir)/package_version.sh > $(distdir)/.version

@NANOCAT_TRUE@@SYMLINKS_TRUE@install-exec-hook:
@NANOCAT_TRUE@@SYMLINKS_TRUE@	cd $(DESTDIR)$(bindir) && \
@NANOCAT_TRUE@@SYMLINKS_TRUE@          $(LN_S) -f nanocat nn_push$(EXEEXT) && \
@NANOCAT_TRUE@@SYMLINKS_TRUE@          $(LN_S) -f nanocat nn_pull$(EXEEXT) && \
@NANOCAT_TRUE@@SYMLINKS_TRUE@          $(LN_S) -f nanocat nn_pub$(EXEEXT) && \
@NANOCAT_TRUE@@SYMLINKS_TRUE@          $(LN_S) -f nanocat nn_sub$(EXEEXT) && \
@NANOCAT_TRUE@@SYMLINKS_TRUE@          $(LN_S) -f nanocat nn_req$(EXEEXT) && \
@NANOCAT_TRUE@@SYMLINKS_TRUE@          $(LN_S) -f nanocat nn_rep$(EXEEXT) && \
@NANOCAT_TRUE@@SYMLINKS_TRUE@          $(LN_S) -f nanocat nn_surveyor$(EXEEXT) && \
@NANOCAT_TRUE@@SYMLINKS_TRUE@          $(LN_S) -f nanocat nn_respondent$(EXEEXT) && \
@NANOCAT_TRUE@@SYMLINKS_TRUE@          $(LN_S) -f nanocat nn_bus$(EXEEXT) && \
@NANOCAT_TRUE@@SYMLINKS_TRUE@          $(LN_S) -f nanocat nn_pair$(EXEEXT)

@NANOCAT_TRUE@@SYMLINKS_TRUE@uninstall-hook:
@NANOCAT_TRUE@@SYMLINKS_TRUE@	cd $(DESTDIR)$(bindir) && \
@NANOCAT_TRUE@@SYMLINKS_TRUE@          rm -f nn_push$(EXEEXT) ; \
@NANOCAT_TRUE@@SYMLINKS_TRUE@          rm -f nn_pull$(EXEEXT) ; \
@NANOCAT_TRUE@@SYMLINKS_TRUE@          rm -f nn_pub$(EXEEXT) ; \
@NANOCAT_TRUE@@SYMLINKS_TRUE@          rm -f nn_sub$(EXEEXT) ; \
@NANOCAT_TRUE@@SYMLINKS_TRUE@          rm -f nn_req$(EXEEXT) ; \
@NANOCAT_TRUE@@SYMLINKS_TRUE@          rm -f nn_rep$(EXEEXT) ; \
@NANOCAT_TRUE@@SYMLINKS_TRUE@          rm -f nn_surveyor$(EXEEXT) ; \
@NANOCAT_TRUE@@SYMLINKS_TRUE@          rm -f nn_respondent$(EXEEXT) ; \
@NANOCAT_TRUE@@SYMLINKS_TRUE@          rm -f nn_bus$(EXEEXT) ; \
@NANOCAT_TRUE@@SYMLINKS_TRUE@          rm -f nn_pair$(EXEEXT)
@NANOCAT_TRUE@@SYMLINKS_TRUE@	cd $(DESTDIR)$(libdir) && \
@NANOCAT_TRUE@@SYMLINKS_TRUE@          rm -f libnanomsg.*
@NANOCAT_TRUE@@SYMLINKS_TRUE@	cd $(DESTDIR)$(includedir) && \
@NANOCAT_TRUE@@SYMLINKS_TRUE@          rm -rf nanomsg

diagrams:
	-mkdir -p doc/diagrams
	$(abs_srcdir)/doc/diag.py $(DEFS) $(CPPFLAGS) \
		$(shell clang -E - -v < /dev/null 2>&1 | \
			sed -n '/#include </{:x;n;/^End/q;s/^ */-I/;p;bx}')

clean-local:
	-rm -f test.ipc test-shutdown.ipc test-separation.ipc

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
